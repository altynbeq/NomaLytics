{"ast":null,"code":"var _jsxFileName = \"/Users/altynbekkuat/Desktop/reactAnalyt/src/components/Charts/Stacked.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, Legend, Category, StackingColumnSeries, Tooltip } from '@syncfusion/ej2-react-charts';\nimport { stackedCustomSeries, stackedPrimaryXAxis, stackedPrimaryYAxis } from '../../data/dummy';\nimport { useStateContext } from '../../contexts/ContextProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stacked = _ref => {\n  _s();\n\n  let {\n    width,\n    height\n  } = _ref;\n  const {\n    currentMode\n  } = useStateContext();\n  return /*#__PURE__*/_jsxDEV(ChartComponent, {\n    id: \"chartsStacked\",\n    primaryXAxis: stackedPrimaryXAxis,\n    primaryYAxis: stackedPrimaryYAxis,\n    width: width,\n    height: height,\n    chartArea: {\n      border: {\n        width: 0\n      }\n    },\n    tooltip: {\n      enable: true\n    },\n    background: currentMode === 'Dark' ? '#33373E' : '#fff',\n    legendSettings: {\n      background: 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Inject, {\n      services: [StackingColumnSeries, Category, Legend, Tooltip]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SeriesCollectionDirective, {\n      children: stackedCustomSeries.map((item, index) => /*#__PURE__*/_jsxDEV(SeriesDirective, { ...item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 51\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Stacked, \"TC2qND29/IS1S3Fr7jSV7BVCnSg=\", false, function () {\n  return [useStateContext];\n});\n\n_c = Stacked;\nexport default Stacked;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stacked\");","map":{"version":3,"sources":["/Users/altynbekkuat/Desktop/reactAnalyt/src/components/Charts/Stacked.jsx"],"names":["React","ChartComponent","SeriesCollectionDirective","SeriesDirective","Inject","Legend","Category","StackingColumnSeries","Tooltip","stackedCustomSeries","stackedPrimaryXAxis","stackedPrimaryYAxis","useStateContext","Stacked","width","height","currentMode","border","enable","background","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,yBAAzB,EAAoDC,eAApD,EAAqEC,MAArE,EAA6EC,MAA7E,EAAqFC,QAArF,EAA+FC,oBAA/F,EAAqHC,OAArH,QAAoI,8BAApI;AAEA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,mBAAnD,QAA8E,kBAA9E;AACA,SAASC,eAAT,QAAgC,gCAAhC;;;AAEA,MAAMC,OAAO,GAAG,QAAuB;AAAA;;AAAA,MAAtB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAsB;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAkBJ,eAAe,EAAvC;AAEA,sBACE,QAAC,cAAD;AACE,IAAA,EAAE,EAAC,eADL;AAEE,IAAA,YAAY,EAAEF,mBAFhB;AAGE,IAAA,YAAY,EAAEC,mBAHhB;AAIE,IAAA,KAAK,EAAEG,KAJT;AAKE,IAAA,MAAM,EAAEC,MALV;AAME,IAAA,SAAS,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAEH,QAAAA,KAAK,EAAE;AAAT;AAAV,KANb;AAOE,IAAA,OAAO,EAAE;AAAEI,MAAAA,MAAM,EAAE;AAAV,KAPX;AAQE,IAAA,UAAU,EAAEF,WAAW,KAAK,MAAhB,GAAyB,SAAzB,GAAqC,MARnD;AASE,IAAA,cAAc,EAAE;AAAEG,MAAAA,UAAU,EAAE;AAAd,KATlB;AAAA,4BAWE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAACZ,oBAAD,EAAuBD,QAAvB,EAAiCD,MAAjC,EAAyCG,OAAzC;AAAlB;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,yBAAD;AAAA,gBAEGC,mBAAmB,CAACW,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,kBAAiB,QAAC,eAAD,OAAiCD;AAAjC,SAAsBC,KAAtB;AAAA;AAAA;AAAA;AAAA,cAAzC;AAFH;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAtBD;;GAAMT,O;UACoBD,e;;;KADpBC,O;AAwBN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, Legend, Category, StackingColumnSeries, Tooltip } from '@syncfusion/ej2-react-charts';\n\nimport { stackedCustomSeries, stackedPrimaryXAxis, stackedPrimaryYAxis } from '../../data/dummy';\nimport { useStateContext } from '../../contexts/ContextProvider';\n\nconst Stacked = ({ width, height }) => {\n  const { currentMode } = useStateContext();\n\n  return (\n    <ChartComponent\n      id=\"chartsStacked\"\n      primaryXAxis={stackedPrimaryXAxis}\n      primaryYAxis={stackedPrimaryYAxis}\n      width={width}\n      height={height}\n      chartArea={{ border: { width: 0 } }}\n      tooltip={{ enable: true }}\n      background={currentMode === 'Dark' ? '#33373E' : '#fff'}\n      legendSettings={{ background: 'white' }}\n    >\n      <Inject services={[StackingColumnSeries, Category, Legend, Tooltip]} />\n      <SeriesCollectionDirective>\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        {stackedCustomSeries.map((item, index) => <SeriesDirective key={index} {...item} />)}\n      </SeriesCollectionDirective>\n    </ChartComponent>\n  );\n};\n\nexport default Stacked;\n"]},"metadata":{},"sourceType":"module"}