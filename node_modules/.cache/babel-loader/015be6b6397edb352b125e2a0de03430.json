{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Draggable, formatUnit, createElement, isNullOrUndefined, addClass, closest } from '@syncfusion/ej2-base';\nimport { removeClass, classList, remove, EventHandler, extend } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport * as events from '../base/constant';\n/**\n * Drag and Drop module is used to perform card actions.\n */\n\nvar DragAndDrop =\n/** @class */\nfunction () {\n  /**\n   * Constructor for drag and drop module\n   *\n   * @param {Kanban} parent Accepts the kanban instance\n   * @private\n   */\n  function DragAndDrop(parent) {\n    this.parent = parent;\n    this.dragObj = {\n      element: null,\n      cloneElement: null,\n      instance: null,\n      targetClone: null,\n      draggedClone: null,\n      targetCloneMulti: null,\n      selectedCards: [],\n      pageX: 0,\n      pageY: 0,\n      navigationInterval: null,\n      cardDetails: [],\n      modifiedData: []\n    };\n    this.dragEdges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false\n    };\n    this.isDragging = false;\n    this.isExternalDrop = false;\n  }\n\n  DragAndDrop.prototype.wireDragEvents = function (element) {\n    var dragContainment;\n\n    if (!this.parent.element != null && this.parent.externalDropId.length === 0) {\n      dragContainment = this.parent.element.querySelector('.' + cls.CONTENT_CLASS);\n    }\n\n    this.dragObj.instance = new Draggable(element, {\n      clone: true,\n      enableTapHold: this.parent.isAdaptive,\n      enableTailMode: true,\n      cursorAt: {\n        top: -10,\n        left: -10\n      },\n      dragArea: dragContainment,\n      dragStart: this.dragStart.bind(this),\n      drag: this.drag.bind(this),\n      dragStop: this.dragStop.bind(this),\n      enableAutoScroll: false,\n      helper: this.dragHelper.bind(this)\n    });\n  };\n\n  DragAndDrop.prototype.dragHelper = function (e) {\n    if (this.parent.isAdaptive && this.parent.touchModule.mobilePopup && this.parent.touchModule.mobilePopup.element.classList.contains(cls.POPUP_OPEN_CLASS)) {\n      this.parent.touchModule.mobilePopup.hide();\n    }\n\n    this.dragObj.element = closest(e.sender.target, '.' + cls.CARD_CLASS);\n\n    if (isNullOrUndefined(this.dragObj.element)) {\n      return null;\n    }\n\n    this.dragObj.element.style.width = formatUnit(this.dragObj.element.offsetWidth);\n    var cloneWrapper = createElement('div', {\n      innerHTML: this.dragObj.element.outerHTML\n    });\n    this.dragObj.cloneElement = cloneWrapper.children.item(0);\n    addClass([this.dragObj.cloneElement], cls.CLONED_CARD_CLASS);\n    this.dragObj.element.parentElement.appendChild(this.dragObj.cloneElement);\n    this.dragObj.targetCloneMulti = createElement('div', {\n      className: cls.TARGET_MULTI_CLONE_CLASS\n    });\n    this.dragObj.targetClone = createElement('div', {\n      className: cls.DROPPED_CLONE_CLASS,\n      styles: 'width:100%;height:' + formatUnit(this.dragObj.element.offsetHeight)\n    });\n    this.dragObj.modifiedData = [];\n    return this.dragObj.cloneElement;\n  };\n\n  DragAndDrop.prototype.dragStart = function (e) {\n    var _this = this;\n\n    this.dragObj.selectedCards = this.dragObj.element;\n\n    if (this.dragObj.element.classList.contains(cls.CARD_SELECTION_CLASS)) {\n      var className = '.' + cls.CARD_CLASS + '.' + cls.CARD_SELECTION_CLASS + ':not(.' + cls.CLONED_CARD_CLASS + ')';\n      var closestEle = closest(this.dragObj.element, '.' + cls.CONTENT_ROW_CLASS);\n      this.dragObj.selectedCards = [].slice.call(closestEle.querySelectorAll(className));\n      this.dragObj.selectedCards.forEach(function (element) {\n        _this.dragObj.cardDetails.push(_this.parent.getCardDetails(element));\n      });\n    } else {\n      this.dragObj.cardDetails = [this.parent.getCardDetails(this.dragObj.element)];\n    }\n\n    var dragArgs = {\n      cancel: false,\n      data: this.dragObj.cardDetails,\n      event: e,\n      element: this.dragObj.selectedCards\n    };\n    this.parent.trigger(events.dragStart, dragArgs, function (dragEventArgs) {\n      if (dragEventArgs.cancel) {\n        _this.removeElement(_this.dragObj.cloneElement);\n\n        _this.dragObj.instance.intDestroy(e);\n\n        _this.dragObj.element = null;\n        _this.dragObj.targetClone = null;\n        _this.dragObj.draggedClone = null;\n        _this.dragObj.cloneElement = null;\n        _this.dragObj.targetCloneMulti = null;\n        return;\n      }\n\n      if (_this.dragObj.element.classList.contains(cls.CARD_SELECTION_CLASS)) {\n        _this.dragObj.selectedCards.forEach(function (element) {\n          _this.draggedClone(element);\n        });\n\n        if (_this.dragObj.selectedCards.length > 1) {\n          _this.dragObj.cloneElement.innerHTML = '';\n          var drag = createElement('div', {\n            className: 'e-multi-card-text',\n            innerHTML: _this.dragObj.selectedCards.length + ' Cards'\n          });\n\n          _this.dragObj.cloneElement.appendChild(drag);\n\n          classList(_this.dragObj.cloneElement, ['e-multi-card-clone'], [cls.CARD_SELECTION_CLASS]);\n\n          _this.parent.layoutModule.disableAttributeSelection(_this.dragObj.cloneElement);\n\n          _this.dragObj.cloneElement.style.width = '90px';\n        }\n      } else {\n        _this.draggedClone(_this.dragObj.element);\n      }\n\n      EventHandler.add(document.body, 'keydown', _this.keydownHandler, _this);\n\n      _this.parent.notify(events.contentReady, {});\n    });\n  };\n\n  DragAndDrop.prototype.draggedClone = function (element) {\n    this.dragObj.draggedClone = createElement('div', {\n      className: cls.DRAGGED_CLONE_CLASS,\n      styles: 'width:' + formatUnit(element.offsetWidth - 1) + ';height:' + formatUnit(element.offsetHeight)\n    });\n    element.insertAdjacentElement('afterend', this.dragObj.draggedClone);\n    addClass([element], cls.DRAGGED_CARD_CLASS);\n  };\n\n  DragAndDrop.prototype.drag = function (e) {\n    var _this = this;\n\n    if (!e.target) {\n      return;\n    }\n\n    var cardElement = closest(e.target, '.' + cls.ROOT_CLASS + ' .' + cls.CARD_CLASS);\n    var target = cardElement || e.target;\n    var selector = '.' + cls.CONTENT_ROW_CLASS + ':not(.' + cls.SWIMLANE_ROW_CLASS + ') .' + cls.CONTENT_CELLS_CLASS + '.' + cls.DROPPABLE_CLASS;\n    var contentCell = closest(target, selector);\n    this.externalDrop(target);\n    this.kanbanObj = this.parent.isExternalKanbanDrop ? this.parent.externalDropObj : this.parent;\n    this.calculateArgs(e);\n\n    if (contentCell && document.body.style.cursor !== 'not-allowed') {\n      var targetKey = this.getColumnKey(contentCell);\n      var keys = targetKey.split(',');\n      this.multiCloneRemove();\n      var isDrag = targetKey === this.getColumnKey(closest(this.dragObj.draggedClone, '.' + cls.CONTENT_CELLS_CLASS)) ? true : false;\n\n      if (keys.length === 1 || isDrag) {\n        if (target.classList.contains(cls.DRAGGED_CLONE_CLASS)) {\n          this.removeElement(this.dragObj.targetClone, this.kanbanObj);\n        }\n\n        if (target.classList.contains(cls.CARD_CLASS)) {\n          var element = target.classList.contains(cls.DRAGGED_CLONE_CLASS) ? target.previousElementSibling.classList.contains(cls.DRAGGED_CARD_CLASS) ? null : target.previousElementSibling : target.previousElementSibling;\n          var insertClone = 'afterend';\n\n          if (isNullOrUndefined(element)) {\n            var pageY = target.classList.contains(cls.DRAGGED_CLONE_CLASS) ? this.dragObj.pageY / 2 : this.dragObj.pageY;\n            var height = target.classList.contains(cls.DRAGGED_CLONE_CLASS) ? target.offsetHeight : target.offsetHeight / 2;\n\n            if (pageY - (this.kanbanObj.element.getBoundingClientRect().top + target.offsetTop) < height) {\n              insertClone = 'beforebegin';\n            }\n          }\n\n          target.insertAdjacentElement(insertClone, this.dragObj.targetClone);\n        } else if (target.classList.contains(cls.CONTENT_CELLS_CLASS) && !closest(target, '.' + cls.SWIMLANE_ROW_CLASS)) {\n          if (target.querySelectorAll('.' + cls.DRAGGED_CARD_CLASS).length !== 0 && target.querySelectorAll('.' + cls.CARD_CLASS + ':not(.e-kanban-dragged-card):not(.e-cloned-card)').length === 0) {\n            return;\n          } else {\n            target.querySelector('.' + cls.CARD_WRAPPER_CLASS).appendChild(this.dragObj.targetClone);\n          }\n        } else if (target.classList.contains(cls.CARD_WRAPPER_CLASS) && !closest(target, '.' + cls.SWIMLANE_ROW_CLASS) && contentCell.querySelectorAll('.' + cls.CARD_CLASS).length === 0) {\n          target.appendChild(this.dragObj.targetClone);\n        }\n      } else if (keys.length > 1 && contentCell.classList.contains(cls.DROPPING_CLASS)) {\n        this.multiCloneCreate(keys, contentCell);\n      }\n\n      this.kanbanObj.notify(events.contentReady, {});\n    }\n\n    if (this.kanbanObj.element.querySelectorAll('.' + cls.DROPPING_CLASS).length === 0) {\n      this.cellDropping();\n    }\n\n    var isCollapsed = false;\n\n    if (contentCell) {\n      isCollapsed = contentCell.classList.contains(cls.COLLAPSED_CLASS) && contentCell.classList.contains(cls.DROPPING_CLASS);\n    }\n\n    if (isCollapsed) {\n      this.toggleVisible(target);\n      addClass([contentCell], cls.TOGGLE_VISIBLE_CLASS);\n    }\n\n    var tColumn = [].slice.call(this.kanbanObj.element.querySelectorAll('.' + cls.TOGGLE_VISIBLE_CLASS));\n\n    if (tColumn.length > 0 && !target.classList.contains(cls.TOGGLE_VISIBLE_CLASS) && !closest(target, '.' + cls.TOGGLE_VISIBLE_CLASS)) {\n      this.toggleVisible(target, tColumn.slice(-1)[0]);\n      removeClass(tColumn, cls.TOGGLE_VISIBLE_CLASS);\n    }\n\n    this.kanbanObj.notify(events.contentReady, {});\n    var multiKeyTarget = closest(target, '.' + cls.MULTI_COLUMN_KEY_CLASS);\n\n    if (multiKeyTarget) {\n      var columnKeys = [].slice.call(this.kanbanObj.element.querySelectorAll('.' + cls.MULTI_COLUMN_KEY_CLASS + ':not(.' + cls.DISABLED_CLASS + ')')).filter(function (element) {\n        return _this.getColumnKey(element) === _this.getColumnKey(multiKeyTarget);\n      });\n\n      if (columnKeys.length > 0) {\n        addClass(columnKeys, cls.MULTI_ACTIVE_CLASS);\n\n        if (columnKeys[0].previousElementSibling) {\n          addClass([columnKeys[0].previousElementSibling], 'e-multi-bottom-border');\n        }\n      }\n    }\n\n    document.body.style.cursor = contentCell && contentCell.classList.contains(cls.DROPPING_CLASS) ? '' : 'not-allowed';\n\n    if (cardElement && !closest(cardElement, '.' + cls.CONTENT_CELLS_CLASS).classList.contains(cls.DROPPING_CLASS)) {\n      cardElement.style.cursor = 'not-allowed';\n      document.body.style.cursor = 'not-allowed';\n    }\n\n    if (this.isExternalDrop && document.body.style.cursor === 'not-allowed') {\n      document.body.style.cursor = '';\n    }\n\n    if (document.body.style.cursor === 'not-allowed') {\n      this.removeElement(this.dragObj.targetClone, this.kanbanObj);\n      this.multiCloneRemove();\n    }\n\n    this.updateScrollPosition();\n    var dragArgs = {\n      data: this.dragObj.cardDetails,\n      event: e,\n      element: this.dragObj.selectedCards\n    };\n    this.kanbanObj.trigger(events.drag, dragArgs);\n    this.parent.isExternalKanbanDrop = false;\n    this.isExternalDrop = false;\n  };\n\n  DragAndDrop.prototype.removeElement = function (element, kanbanObj) {\n    kanbanObj = kanbanObj ? kanbanObj : this.parent;\n\n    if (kanbanObj.element.getElementsByClassName(element.className).length > 0) {\n      remove(element);\n    }\n  };\n\n  DragAndDrop.prototype.externalDrop = function (target) {\n    var _this = this;\n\n    this.parent.externalDropId.forEach(function (externalDropId) {\n      var targetRootElement = closest(target, externalDropId);\n\n      if (targetRootElement) {\n        if (targetRootElement.classList.contains('e-kanban')) {\n          _this.parent.externalDropObj = document.querySelector(externalDropId).ej2_instances[0];\n          _this.parent.isExternalKanbanDrop = true;\n          var className = '.' + cls.CONTENT_ROW_CLASS + ':not(.' + cls.SWIMLANE_ROW_CLASS + '):not(.' + cls.COLLAPSED_CLASS + ') .' + cls.CONTENT_CELLS_CLASS;\n          var cells = [].slice.call(_this.parent.externalDropObj.element.querySelectorAll(className));\n          addClass(cells, cls.DROPPING_CLASS);\n        } else {\n          _this.isExternalDrop = true;\n        }\n      }\n    });\n  };\n\n  DragAndDrop.prototype.multiCloneCreate = function (keys, contentCell) {\n    var offsetHeight = contentCell.offsetHeight;\n    var limitEle = contentCell.querySelector('.' + cls.LIMITS_CLASS);\n\n    if (limitEle) {\n      offsetHeight -= limitEle.offsetHeight;\n    }\n\n    this.dragObj.targetCloneMulti.style.height = formatUnit(offsetHeight);\n\n    if (contentCell.querySelector('.' + cls.SHOW_ADD_BUTTON)) {\n      addClass([contentCell.querySelector('.' + cls.SHOW_ADD_BUTTON)], cls.MULTI_CARD_WRAPPER_CLASS);\n    }\n\n    addClass([contentCell.querySelector('.' + cls.CARD_WRAPPER_CLASS)], cls.MULTI_CARD_WRAPPER_CLASS);\n    contentCell.querySelector('.' + cls.CARD_WRAPPER_CLASS).style.height = 'auto';\n    contentCell.style.borderStyle = 'none';\n    this.removeElement(this.dragObj.targetClone);\n\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n      var key = keys_1[_i];\n      var dragCell = closest(this.dragObj.draggedClone, '.' + cls.CONTENT_CELLS_CLASS);\n      var transition = this.kanbanObj.columns[dragCell.cellIndex].transitionColumns;\n      var allowTransition = this.allowedTransition(this.dragObj.element.getAttribute('data-key'), key, transition);\n      var name_1 = allowTransition ? '' : ' ' + cls.DISABLED_CLASS;\n      var colKey = createElement('div', {\n        className: cls.MULTI_COLUMN_KEY_CLASS + name_1,\n        attrs: {\n          'data-key': key.trim()\n        }\n      });\n      var text = createElement('div', {\n        className: 'e-text',\n        innerHTML: key.trim()\n      });\n      contentCell.appendChild(this.dragObj.targetCloneMulti).appendChild(colKey).appendChild(text);\n      colKey.style.cursor = allowTransition ? '' : 'not-allowed';\n      colKey.style.lineHeight = colKey.style.height = formatUnit(offsetHeight / keys.length);\n      text.style.top = formatUnit(offsetHeight / 2 - text.offsetHeight / 2);\n    }\n  };\n\n  DragAndDrop.prototype.allowedTransition = function (currentCardKey, targetCardKey, allowedKey) {\n    var allowTransition = true;\n    var targetKey = targetCardKey.split(',');\n\n    for (var i = 0; i < targetKey.length; i++) {\n      if (currentCardKey === targetKey[i].trim()) {\n        return true;\n      }\n\n      if (allowedKey) {\n        if (allowedKey.length === 1 && allowedKey[0].length === 0) {\n          return true;\n        }\n\n        for (var j = 0; j < allowedKey.length; j++) {\n          if (targetKey[i].trim() === allowedKey[j].trim()) {\n            return true;\n          } else {\n            allowTransition = false;\n          }\n        }\n      }\n    }\n\n    return allowTransition;\n  };\n\n  DragAndDrop.prototype.cellDropping = function () {\n    var _this = this;\n\n    var dragCell = closest(this.dragObj.draggedClone, '.' + cls.CONTENT_CELLS_CLASS);\n    var dragRow = closest(this.dragObj.draggedClone, '.' + cls.CONTENT_ROW_CLASS);\n    this.addDropping(dragRow, dragCell);\n\n    if (dragCell && dragCell.classList.contains(cls.DROP_CLASS)) {\n      addClass([dragCell], cls.DROPPING_CLASS);\n    }\n\n    if (this.kanbanObj.swimlaneSettings.keyField && this.kanbanObj.swimlaneSettings.allowDragAndDrop) {\n      var className = '.' + cls.CONTENT_ROW_CLASS + ':not(.' + cls.SWIMLANE_ROW_CLASS + '):not(.' + cls.COLLAPSED_CLASS + ')';\n      var rows = [].slice.call(this.kanbanObj.element.querySelectorAll(className));\n      [].slice.call(rows).forEach(function (row) {\n        if (dragRow !== row) {\n          _this.addDropping(row, dragCell);\n        }\n      });\n    }\n  };\n\n  DragAndDrop.prototype.addDropping = function (dragRow, dragCell) {\n    var _this = this;\n\n    if (dragCell && dragRow) {\n      [].slice.call(dragRow.children).forEach(function (cell) {\n        var transition = _this.kanbanObj.columns[dragCell.cellIndex].transitionColumns;\n\n        if (cell !== dragCell && cell.classList.contains(cls.DROP_CLASS) && _this.allowedTransition(dragCell.getAttribute('data-key'), cell.getAttribute('data-key'), transition)) {\n          addClass([cell], cls.DROPPING_CLASS);\n        }\n      });\n    }\n  };\n\n  DragAndDrop.prototype.keydownHandler = function (e) {\n    if (e.code === 'Escape' && this.dragObj.cloneElement) {\n      EventHandler.remove(this.dragObj.cloneElement, 'keydown', this.keydownHandler);\n      this.dragObj.element.removeAttribute('aria-grabbed');\n      this.dragStopClear();\n      this.dragStopPostClear();\n    }\n  };\n\n  DragAndDrop.prototype.dragStop = function (e) {\n    var _this = this;\n\n    var contentCell = closest(this.dragObj.targetClone, '.' + cls.CONTENT_CELLS_CLASS);\n    var columnKey;\n    var dropIndex;\n    EventHandler.remove(document.body, 'keydown', this.keydownHandler);\n\n    if (this.dragObj.targetClone.parentElement) {\n      var className = '.' + cls.CARD_CLASS + ':not(.' + cls.DRAGGED_CARD_CLASS + '),.' + cls.DROPPED_CLONE_CLASS;\n      var element = [].slice.call(this.dragObj.targetClone.parentElement.querySelectorAll(className));\n      dropIndex = element.indexOf(this.dragObj.targetClone);\n    }\n\n    if (!isNullOrUndefined(this.kanbanObj) && this.kanbanObj.element.querySelector('.' + cls.TARGET_MULTI_CLONE_CLASS)) {\n      columnKey = closest(e.target, '.' + cls.MULTI_COLUMN_KEY_CLASS + ':not(.' + cls.DISABLED_CLASS + ')');\n    }\n\n    if (contentCell || columnKey) {\n      var cardStatus_1;\n\n      if (contentCell) {\n        cardStatus_1 = this.getColumnKey(contentCell);\n      } else {\n        cardStatus_1 = this.getColumnKey(columnKey);\n        contentCell = closest(columnKey, '.' + cls.CONTENT_CELLS_CLASS);\n      }\n\n      if (this.dragObj.selectedCards instanceof HTMLElement) {\n        this.updateDroppedData(this.dragObj.selectedCards, cardStatus_1, contentCell);\n      } else {\n        this.dragObj.selectedCards.forEach(function (element) {\n          _this.updateDroppedData(element, cardStatus_1, contentCell);\n        });\n      }\n\n      if (this.parent.sortSettings.field && this.parent.sortSettings.sortBy === 'Index') {\n        this.changeOrder(this.dragObj.modifiedData);\n      }\n    }\n\n    if (this.dragObj.modifiedData.length === 0) {\n      this.dragObj.modifiedData = this.dragObj.cardDetails;\n    }\n\n    var dragArgs = {\n      cancel: false,\n      data: this.dragObj.modifiedData,\n      event: e,\n      element: this.dragObj.selectedCards,\n      dropIndex: dropIndex\n    };\n    this.parent.trigger(events.dragStop, dragArgs, function (dragEventArgs) {\n      _this.dragStopClear();\n\n      if (!dragEventArgs.cancel) {\n        if (contentCell || columnKey) {\n          var updateCard = dragEventArgs.data instanceof Array && dragEventArgs.data.length > 1 ? dragEventArgs.data : dragEventArgs.data[0];\n\n          _this.parent.crudModule.updateCard(updateCard, dragEventArgs.dropIndex);\n        }\n      }\n\n      _this.dragStopPostClear();\n    });\n  };\n\n  DragAndDrop.prototype.dragStopClear = function () {\n    this.removeElement(this.dragObj.draggedClone);\n    this.removeElement(this.dragObj.targetClone, this.kanbanObj);\n    this.removeElement(this.dragObj.cloneElement);\n    var dragMultiClone = [].slice.call(this.parent.element.querySelectorAll('.' + cls.DRAGGED_CLONE_CLASS));\n    dragMultiClone.forEach(function (clone) {\n      remove(clone);\n    });\n    this.dragObj.element.style.removeProperty('width');\n    this.multiCloneRemove();\n\n    if (this.dragObj.selectedCards instanceof HTMLElement) {\n      removeClass([this.dragObj.selectedCards], cls.DRAGGED_CARD_CLASS);\n    } else {\n      removeClass(this.dragObj.selectedCards, cls.DRAGGED_CARD_CLASS);\n    }\n\n    clearInterval(this.dragObj.navigationInterval);\n    this.dragObj.navigationInterval = null;\n\n    if (document.body.style.cursor === 'not-allowed') {\n      document.body.style.cursor = '';\n    }\n\n    var styleCards = [].slice.call(this.parent.element.querySelectorAll('.' + cls.CARD_CLASS + '[style]'));\n    styleCards.forEach(function (styleCard) {\n      styleCard.style.cursor = '';\n    });\n    var className = '.' + cls.CONTENT_ROW_CLASS + ':not(.' + cls.SWIMLANE_ROW_CLASS + ')';\n    var cells = [].slice.call(this.parent.element.querySelectorAll(className + ' .' + cls.CONTENT_CELLS_CLASS));\n    cells.forEach(function (cell) {\n      return removeClass([cell], cls.DROPPING_CLASS);\n    });\n\n    if (this.parent.externalDropObj) {\n      var externalCells = [].slice.call(this.parent.externalDropObj.element.querySelectorAll(className + ' .' + cls.CONTENT_CELLS_CLASS));\n      externalCells.forEach(function (externalCell) {\n        return removeClass([externalCell], cls.DROPPING_CLASS);\n      });\n    }\n  };\n\n  DragAndDrop.prototype.dragStopPostClear = function () {\n    if (this.parent.isAdaptive) {\n      this.parent.touchModule.tabHold = false;\n    }\n\n    this.dragObj.cardDetails = this.dragObj.modifiedData = [];\n    this.isDragging = false;\n    this.parent.isExternalKanbanDrop = false;\n    this.parent.externalDropObj = null;\n  };\n\n  DragAndDrop.prototype.updateDroppedData = function (element, cardStatus, contentCell) {\n    var crudObj = this.parent.getCardDetails(element);\n    var crudData = extend({}, crudObj, null, true);\n\n    if (cardStatus.split(',').length === 1) {\n      crudData[this.parent.keyField] = cardStatus;\n    }\n\n    if (this.parent.swimlaneSettings.keyField && this.parent.swimlaneSettings.allowDragAndDrop) {\n      var prev = closest(contentCell, '.' + cls.CONTENT_ROW_CLASS).previousElementSibling;\n\n      if (this.parent.isAdaptive) {\n        var keyField = this.parent.layoutModule.kanbanRows[this.parent.layoutModule.swimlaneIndex].keyField;\n        crudData[this.parent.swimlaneSettings.keyField] = keyField;\n      } else {\n        crudData[this.parent.swimlaneSettings.keyField] = this.getColumnKey(prev);\n      }\n    }\n\n    this.dragObj.modifiedData.push(crudData);\n  };\n\n  DragAndDrop.prototype.changeOrder = function (modifieddata) {\n    var _this = this;\n\n    var prevele = false;\n    var element = this.kanbanObj.sortSettings.direction === 'Ascending' ? this.dragObj.targetClone.previousElementSibling : this.dragObj.targetClone.nextElementSibling;\n\n    if (element && !element.classList.contains(cls.DRAGGED_CARD_CLASS) && !element.classList.contains(cls.CLONED_CARD_CLASS) && !element.classList.contains(cls.DRAGGED_CLONE_CLASS)) {\n      prevele = true;\n    } else if (this.dragObj.targetClone.nextElementSibling && this.kanbanObj.sortSettings.direction === 'Ascending') {\n      element = this.dragObj.targetClone.nextElementSibling;\n    } else if (this.dragObj.targetClone.previousElementSibling && this.kanbanObj.sortSettings.direction === 'Descending') {\n      element = this.dragObj.targetClone.previousElementSibling;\n    } else {\n      return;\n    }\n\n    if (element.classList.contains(cls.CARD_CLASS)) {\n      var obj = this.kanbanObj.getCardDetails(element);\n      var keyIndex_1 = obj[this.kanbanObj.sortSettings.field];\n\n      if (modifieddata.length > 1 && this.kanbanObj.sortSettings.direction === 'Descending') {\n        modifieddata = modifieddata.reverse();\n      }\n\n      modifieddata.forEach(function (data, index) {\n        if (prevele) {\n          data[_this.kanbanObj.sortSettings.field] = ++keyIndex_1;\n        } else if (keyIndex_1 !== 1 && index <= data[_this.kanbanObj.sortSettings.field]) {\n          data[_this.kanbanObj.sortSettings.field] = --keyIndex_1;\n        } else if (keyIndex_1 === 1) {\n          data[_this.kanbanObj.sortSettings.field] = index + 1;\n        }\n      });\n    }\n  };\n\n  DragAndDrop.prototype.toggleVisible = function (target, tColumn) {\n    var _this = this;\n\n    var headerCells = '.' + cls.HEADER_CELLS_CLASS + ':not(.' + cls.STACKED_HEADER_CELL_CLASS + ')';\n    var lists = [].slice.call(this.kanbanObj.element.querySelectorAll(headerCells));\n    lists.forEach(function (list) {\n      if (_this.getColumnKey(list) === _this.getColumnKey(tColumn || target)) {\n        _this.kanbanObj.actionModule.columnToggle(list);\n      }\n    });\n    var cloneTarget = closest(this.dragObj.draggedClone, '.' + cls.CONTENT_CELLS_CLASS);\n\n    if (cloneTarget) {\n      var width = formatUnit(cloneTarget.offsetWidth - events.cardSpace);\n      this.dragObj.draggedClone.style.width = width;\n      this.dragObj.cloneElement.style.width = width;\n    }\n  };\n\n  DragAndDrop.prototype.multiCloneRemove = function () {\n    var cloneMulti = [].slice.call(this.kanbanObj.element.querySelectorAll('.' + cls.TARGET_MULTI_CLONE_CLASS));\n\n    if (cloneMulti.length > 0) {\n      var columnKey = [].slice.call(this.kanbanObj.element.querySelectorAll('.' + cls.MULTI_COLUMN_KEY_CLASS));\n      columnKey.forEach(function (node) {\n        return remove(node);\n      });\n      cloneMulti.forEach(function (node) {\n        var cell = closest(node, '.' + cls.CONTENT_CELLS_CLASS);\n\n        if (cell) {\n          cell.style.borderStyle = '';\n\n          if (cell.querySelector('.' + cls.SHOW_ADD_BUTTON)) {\n            removeClass([cell.querySelector('.' + cls.SHOW_ADD_BUTTON)], cls.MULTI_CARD_WRAPPER_CLASS);\n          }\n\n          removeClass([cell.querySelector('.' + cls.CARD_WRAPPER_CLASS)], cls.MULTI_CARD_WRAPPER_CLASS);\n        }\n      });\n      this.removeElement(this.dragObj.targetCloneMulti, this.kanbanObj);\n    }\n  };\n\n  DragAndDrop.prototype.calculateArgs = function (e) {\n    var eventArgs = this.getPageCoordinates(e);\n    this.dragObj.pageY = eventArgs.pageY;\n    this.dragObj.pageX = eventArgs.pageX;\n    this.isDragging = true;\n\n    if (this.kanbanObj.isAdaptive && this.kanbanObj.tooltipModule) {\n      this.kanbanObj.tooltipModule.tooltipObj.close();\n    }\n  };\n\n  DragAndDrop.prototype.getPageCoordinates = function (e) {\n    var eventArgs = e.event;\n    return eventArgs && eventArgs.changedTouches ? eventArgs.changedTouches[0] : e.changedTouches ? e.changedTouches[0] : eventArgs || e;\n  };\n\n  DragAndDrop.prototype.getColumnKey = function (target) {\n    if (target && target.getAttribute('data-key')) {\n      return target.getAttribute('data-key').trim();\n    }\n\n    return '';\n  };\n\n  DragAndDrop.prototype.updateScrollPosition = function () {\n    var _this = this;\n\n    if (isNullOrUndefined(this.dragObj.navigationInterval)) {\n      this.dragObj.navigationInterval = window.setInterval(function () {\n        _this.autoScroll();\n      }, 100);\n    }\n  };\n\n  DragAndDrop.prototype.autoScrollValidation = function () {\n    var pageY = this.dragObj.pageY;\n    var pageX = this.dragObj.pageX;\n    var autoScrollDistance = 30;\n    var dragEdges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false\n    };\n    var viewBoundaries = this.kanbanObj.element.querySelector('.' + cls.CONTENT_CLASS).getBoundingClientRect();\n\n    if (pageY < viewBoundaries.top + autoScrollDistance + window.pageYOffset && pageY > viewBoundaries.top + window.pageYOffset) {\n      dragEdges.top = true;\n    }\n\n    if (pageY > viewBoundaries.bottom - autoScrollDistance + window.pageYOffset && pageY < viewBoundaries.bottom + window.pageYOffset) {\n      dragEdges.bottom = true;\n    }\n\n    if (pageX < viewBoundaries.left + autoScrollDistance + window.pageXOffset && pageX > viewBoundaries.left + window.pageXOffset) {\n      dragEdges.left = true;\n    }\n\n    if (pageX > viewBoundaries.right - autoScrollDistance + window.pageXOffset && pageX < viewBoundaries.right + window.pageXOffset) {\n      dragEdges.right = true;\n    }\n\n    this.dragEdges = dragEdges;\n  };\n\n  DragAndDrop.prototype.autoScroll = function () {\n    this.autoScrollValidation();\n    var scrollSensitivity = 30;\n\n    if (this.kanbanObj.isAdaptive) {\n      var parent_1;\n\n      if (this.dragEdges.top || this.dragEdges.bottom) {\n        if (this.dragObj.targetClone) {\n          parent_1 = closest(this.dragObj.targetClone, '.' + cls.CARD_WRAPPER_CLASS);\n        } else {\n          parent_1 = closest(this.dragObj.draggedClone, '.' + cls.CARD_WRAPPER_CLASS);\n        }\n      } else if (this.dragEdges.right || this.dragEdges.left) {\n        parent_1 = this.kanbanObj.element.querySelector('.' + cls.CONTENT_CLASS);\n      }\n\n      if (parent_1) {\n        var yIsScrollable = parent_1.offsetHeight <= parent_1.scrollHeight;\n        var xIsScrollable = parent_1.offsetWidth <= parent_1.scrollWidth;\n        var yInBounds = parent_1.scrollTop >= 0 && parent_1.scrollTop + parent_1.offsetHeight <= parent_1.scrollHeight;\n        var xInBounds = parent_1.scrollLeft >= 0 && parent_1.scrollLeft + parent_1.offsetWidth <= parent_1.scrollWidth;\n\n        if (yIsScrollable && yInBounds && (this.dragEdges.top || this.dragEdges.bottom)) {\n          parent_1.scrollTop += this.dragEdges.top ? -(scrollSensitivity + 36) : scrollSensitivity;\n        }\n\n        if (xIsScrollable && xInBounds && (this.dragEdges.left || this.dragEdges.right)) {\n          var scroll_1 = this.kanbanObj.layoutModule.getWidth() * (this.kanbanObj.columns.length - 1) > parent_1.scrollLeft;\n\n          if (scroll_1 || this.dragEdges.left) {\n            parent_1.scrollLeft += this.dragEdges.left ? -scrollSensitivity : scrollSensitivity;\n          }\n        }\n      }\n    } else {\n      var parent_2 = this.kanbanObj.element.querySelector('.' + cls.CONTENT_CLASS);\n      var column = this.dragObj.targetClone.parentElement;\n      var yScrollable = parent_2.offsetHeight <= parent_2.scrollHeight;\n      var xScrollable = parent_2.offsetWidth <= parent_2.scrollWidth;\n      var yBounds = yScrollable && parent_2.scrollTop >= 0 && parent_2.scrollTop + parent_2.offsetHeight <= parent_2.scrollHeight;\n      var xBounds = xScrollable && parent_2.scrollLeft >= 0 && parent_2.scrollLeft + parent_2.offsetWidth <= parent_2.scrollWidth;\n\n      if (yBounds && (this.dragEdges.top || this.dragEdges.bottom)) {\n        parent_2.scrollTop += this.dragEdges.top ? -scrollSensitivity : scrollSensitivity;\n\n        if (column) {\n          column.scrollTop += this.dragEdges.top ? -scrollSensitivity : scrollSensitivity;\n        }\n      }\n\n      if (xBounds && (this.dragEdges.left || this.dragEdges.right)) {\n        parent_2.scrollLeft += this.dragEdges.left ? -scrollSensitivity : scrollSensitivity;\n\n        if (column) {\n          column.scrollLeft += this.dragEdges.left ? -scrollSensitivity : scrollSensitivity;\n        }\n      }\n\n      if (this.dragObj.pageY - window.scrollY < scrollSensitivity) {\n        window.scrollTo(window.scrollX, window.scrollY - scrollSensitivity);\n      } else if (window.innerHeight - (this.dragObj.pageY - window.scrollY) < scrollSensitivity) {\n        window.scrollTo(window.scrollX, window.scrollY + scrollSensitivity);\n      }\n    }\n  };\n\n  DragAndDrop.prototype.unWireDragEvents = function (element) {\n    var dragInstance = element.ej2_instances[0];\n\n    if (dragInstance && !dragInstance.isDestroyed) {\n      dragInstance.destroy();\n    }\n  };\n\n  return DragAndDrop;\n}();\n\nexport { DragAndDrop };","map":{"version":3,"sources":["/Users/altynbekkuat/Desktop/NomaLytics/node_modules/@syncfusion/ej2-kanban/src/kanban/actions/drag.js"],"names":["Draggable","formatUnit","createElement","isNullOrUndefined","addClass","closest","removeClass","classList","remove","EventHandler","extend","cls","events","DragAndDrop","parent","dragObj","element","cloneElement","instance","targetClone","draggedClone","targetCloneMulti","selectedCards","pageX","pageY","navigationInterval","cardDetails","modifiedData","dragEdges","left","right","top","bottom","isDragging","isExternalDrop","prototype","wireDragEvents","dragContainment","externalDropId","length","querySelector","CONTENT_CLASS","clone","enableTapHold","isAdaptive","enableTailMode","cursorAt","dragArea","dragStart","bind","drag","dragStop","enableAutoScroll","helper","dragHelper","e","touchModule","mobilePopup","contains","POPUP_OPEN_CLASS","hide","sender","target","CARD_CLASS","style","width","offsetWidth","cloneWrapper","innerHTML","outerHTML","children","item","CLONED_CARD_CLASS","parentElement","appendChild","className","TARGET_MULTI_CLONE_CLASS","DROPPED_CLONE_CLASS","styles","offsetHeight","_this","CARD_SELECTION_CLASS","closestEle","CONTENT_ROW_CLASS","slice","call","querySelectorAll","forEach","push","getCardDetails","dragArgs","cancel","data","event","trigger","dragEventArgs","removeElement","intDestroy","layoutModule","disableAttributeSelection","add","document","body","keydownHandler","notify","contentReady","DRAGGED_CLONE_CLASS","insertAdjacentElement","DRAGGED_CARD_CLASS","cardElement","ROOT_CLASS","selector","SWIMLANE_ROW_CLASS","CONTENT_CELLS_CLASS","DROPPABLE_CLASS","contentCell","externalDrop","kanbanObj","isExternalKanbanDrop","externalDropObj","calculateArgs","cursor","targetKey","getColumnKey","keys","split","multiCloneRemove","isDrag","previousElementSibling","insertClone","height","getBoundingClientRect","offsetTop","CARD_WRAPPER_CLASS","DROPPING_CLASS","multiCloneCreate","cellDropping","isCollapsed","COLLAPSED_CLASS","toggleVisible","TOGGLE_VISIBLE_CLASS","tColumn","multiKeyTarget","MULTI_COLUMN_KEY_CLASS","columnKeys","DISABLED_CLASS","filter","MULTI_ACTIVE_CLASS","updateScrollPosition","getElementsByClassName","targetRootElement","ej2_instances","cells","limitEle","LIMITS_CLASS","SHOW_ADD_BUTTON","MULTI_CARD_WRAPPER_CLASS","borderStyle","_i","keys_1","key","dragCell","transition","columns","cellIndex","transitionColumns","allowTransition","allowedTransition","getAttribute","name_1","colKey","attrs","trim","text","lineHeight","currentCardKey","targetCardKey","allowedKey","i","j","dragRow","addDropping","DROP_CLASS","swimlaneSettings","keyField","allowDragAndDrop","rows","row","cell","code","removeAttribute","dragStopClear","dragStopPostClear","columnKey","dropIndex","indexOf","cardStatus_1","HTMLElement","updateDroppedData","sortSettings","field","sortBy","changeOrder","updateCard","Array","crudModule","dragMultiClone","removeProperty","clearInterval","styleCards","styleCard","externalCells","externalCell","tabHold","cardStatus","crudObj","crudData","prev","kanbanRows","swimlaneIndex","modifieddata","prevele","direction","nextElementSibling","obj","keyIndex_1","reverse","index","headerCells","HEADER_CELLS_CLASS","STACKED_HEADER_CELL_CLASS","lists","list","actionModule","columnToggle","cloneTarget","cardSpace","cloneMulti","node","eventArgs","getPageCoordinates","tooltipModule","tooltipObj","close","changedTouches","window","setInterval","autoScroll","autoScrollValidation","autoScrollDistance","viewBoundaries","pageYOffset","pageXOffset","scrollSensitivity","parent_1","yIsScrollable","scrollHeight","xIsScrollable","scrollWidth","yInBounds","scrollTop","xInBounds","scrollLeft","scroll_1","getWidth","parent_2","column","yScrollable","xScrollable","yBounds","xBounds","scrollY","scrollTo","scrollX","innerHeight","unWireDragEvents","dragInstance","isDestroyed","destroy"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Draggable, formatUnit, createElement, isNullOrUndefined, addClass, closest } from '@syncfusion/ej2-base';\nimport { removeClass, classList, remove, EventHandler, extend } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport * as events from '../base/constant';\n/**\n * Drag and Drop module is used to perform card actions.\n */\nvar DragAndDrop = /** @class */ (function () {\n    /**\n     * Constructor for drag and drop module\n     *\n     * @param {Kanban} parent Accepts the kanban instance\n     * @private\n     */\n    function DragAndDrop(parent) {\n        this.parent = parent;\n        this.dragObj = {\n            element: null, cloneElement: null, instance: null, targetClone: null, draggedClone: null, targetCloneMulti: null,\n            selectedCards: [], pageX: 0, pageY: 0, navigationInterval: null, cardDetails: [], modifiedData: []\n        };\n        this.dragEdges = { left: false, right: false, top: false, bottom: false };\n        this.isDragging = false;\n        this.isExternalDrop = false;\n    }\n    DragAndDrop.prototype.wireDragEvents = function (element) {\n        var dragContainment;\n        if (!this.parent.element != null && this.parent.externalDropId.length === 0) {\n            dragContainment = this.parent.element.querySelector('.' + cls.CONTENT_CLASS);\n        }\n        this.dragObj.instance = new Draggable(element, {\n            clone: true,\n            enableTapHold: this.parent.isAdaptive,\n            enableTailMode: true,\n            cursorAt: { top: -10, left: -10 },\n            dragArea: dragContainment,\n            dragStart: this.dragStart.bind(this),\n            drag: this.drag.bind(this),\n            dragStop: this.dragStop.bind(this),\n            enableAutoScroll: false,\n            helper: this.dragHelper.bind(this)\n        });\n    };\n    DragAndDrop.prototype.dragHelper = function (e) {\n        if (this.parent.isAdaptive && this.parent.touchModule.mobilePopup &&\n            this.parent.touchModule.mobilePopup.element.classList.contains(cls.POPUP_OPEN_CLASS)) {\n            this.parent.touchModule.mobilePopup.hide();\n        }\n        this.dragObj.element = closest(e.sender.target, '.' + cls.CARD_CLASS);\n        if (isNullOrUndefined(this.dragObj.element)) {\n            return null;\n        }\n        this.dragObj.element.style.width = formatUnit(this.dragObj.element.offsetWidth);\n        var cloneWrapper = createElement('div', { innerHTML: this.dragObj.element.outerHTML });\n        this.dragObj.cloneElement = cloneWrapper.children.item(0);\n        addClass([this.dragObj.cloneElement], cls.CLONED_CARD_CLASS);\n        this.dragObj.element.parentElement.appendChild(this.dragObj.cloneElement);\n        this.dragObj.targetCloneMulti = createElement('div', { className: cls.TARGET_MULTI_CLONE_CLASS });\n        this.dragObj.targetClone = createElement('div', {\n            className: cls.DROPPED_CLONE_CLASS,\n            styles: 'width:100%;height:' + formatUnit(this.dragObj.element.offsetHeight)\n        });\n        this.dragObj.modifiedData = [];\n        return this.dragObj.cloneElement;\n    };\n    DragAndDrop.prototype.dragStart = function (e) {\n        var _this = this;\n        this.dragObj.selectedCards = this.dragObj.element;\n        if (this.dragObj.element.classList.contains(cls.CARD_SELECTION_CLASS)) {\n            var className = '.' + cls.CARD_CLASS + '.' + cls.CARD_SELECTION_CLASS + ':not(.' + cls.CLONED_CARD_CLASS + ')';\n            var closestEle = closest(this.dragObj.element, '.' + cls.CONTENT_ROW_CLASS);\n            this.dragObj.selectedCards = [].slice.call(closestEle.querySelectorAll(className));\n            this.dragObj.selectedCards.forEach(function (element) {\n                _this.dragObj.cardDetails.push(_this.parent.getCardDetails(element));\n            });\n        }\n        else {\n            this.dragObj.cardDetails = [this.parent.getCardDetails(this.dragObj.element)];\n        }\n        var dragArgs = { cancel: false, data: this.dragObj.cardDetails, event: e, element: this.dragObj.selectedCards };\n        this.parent.trigger(events.dragStart, dragArgs, function (dragEventArgs) {\n            if (dragEventArgs.cancel) {\n                _this.removeElement(_this.dragObj.cloneElement);\n                _this.dragObj.instance.intDestroy(e);\n                _this.dragObj.element = null;\n                _this.dragObj.targetClone = null;\n                _this.dragObj.draggedClone = null;\n                _this.dragObj.cloneElement = null;\n                _this.dragObj.targetCloneMulti = null;\n                return;\n            }\n            if (_this.dragObj.element.classList.contains(cls.CARD_SELECTION_CLASS)) {\n                _this.dragObj.selectedCards.forEach(function (element) { _this.draggedClone(element); });\n                if (_this.dragObj.selectedCards.length > 1) {\n                    _this.dragObj.cloneElement.innerHTML = '';\n                    var drag = createElement('div', {\n                        className: 'e-multi-card-text',\n                        innerHTML: _this.dragObj.selectedCards.length + ' Cards'\n                    });\n                    _this.dragObj.cloneElement.appendChild(drag);\n                    classList(_this.dragObj.cloneElement, ['e-multi-card-clone'], [cls.CARD_SELECTION_CLASS]);\n                    _this.parent.layoutModule.disableAttributeSelection(_this.dragObj.cloneElement);\n                    _this.dragObj.cloneElement.style.width = '90px';\n                }\n            }\n            else {\n                _this.draggedClone(_this.dragObj.element);\n            }\n            EventHandler.add(document.body, 'keydown', _this.keydownHandler, _this);\n            _this.parent.notify(events.contentReady, {});\n        });\n    };\n    DragAndDrop.prototype.draggedClone = function (element) {\n        this.dragObj.draggedClone = createElement('div', {\n            className: cls.DRAGGED_CLONE_CLASS,\n            styles: 'width:' + formatUnit(element.offsetWidth - 1) + ';height:' + formatUnit(element.offsetHeight)\n        });\n        element.insertAdjacentElement('afterend', this.dragObj.draggedClone);\n        addClass([element], cls.DRAGGED_CARD_CLASS);\n    };\n    DragAndDrop.prototype.drag = function (e) {\n        var _this = this;\n        if (!e.target) {\n            return;\n        }\n        var cardElement = closest(e.target, '.' + cls.ROOT_CLASS + ' .' + cls.CARD_CLASS);\n        var target = cardElement || e.target;\n        var selector = '.' + cls.CONTENT_ROW_CLASS + ':not(.' + cls.SWIMLANE_ROW_CLASS + ') .' + cls.CONTENT_CELLS_CLASS\n            + '.' + cls.DROPPABLE_CLASS;\n        var contentCell = closest(target, selector);\n        this.externalDrop(target);\n        this.kanbanObj = this.parent.isExternalKanbanDrop ? this.parent.externalDropObj : this.parent;\n        this.calculateArgs(e);\n        if (contentCell && document.body.style.cursor !== 'not-allowed') {\n            var targetKey = this.getColumnKey(contentCell);\n            var keys = targetKey.split(',');\n            this.multiCloneRemove();\n            var isDrag = (targetKey === this.getColumnKey(closest(this.dragObj.draggedClone, '.' + cls.CONTENT_CELLS_CLASS)))\n                ? true : false;\n            if (keys.length === 1 || isDrag) {\n                if (target.classList.contains(cls.DRAGGED_CLONE_CLASS)) {\n                    this.removeElement(this.dragObj.targetClone, this.kanbanObj);\n                }\n                if (target.classList.contains(cls.CARD_CLASS)) {\n                    var element = target.classList.contains(cls.DRAGGED_CLONE_CLASS) ?\n                        (target.previousElementSibling.classList.contains(cls.DRAGGED_CARD_CLASS) ? null : target.previousElementSibling)\n                        : target.previousElementSibling;\n                    var insertClone = 'afterend';\n                    if (isNullOrUndefined(element)) {\n                        var pageY = target.classList.contains(cls.DRAGGED_CLONE_CLASS) ? (this.dragObj.pageY / 2) :\n                            this.dragObj.pageY;\n                        var height = target.classList.contains(cls.DRAGGED_CLONE_CLASS) ? target.offsetHeight :\n                            (target.offsetHeight / 2);\n                        if ((pageY - (this.kanbanObj.element.getBoundingClientRect().top + target.offsetTop)) < height) {\n                            insertClone = 'beforebegin';\n                        }\n                    }\n                    target.insertAdjacentElement(insertClone, this.dragObj.targetClone);\n                }\n                else if (target.classList.contains(cls.CONTENT_CELLS_CLASS) && !closest(target, '.' + cls.SWIMLANE_ROW_CLASS)) {\n                    if (target.querySelectorAll('.' + cls.DRAGGED_CARD_CLASS).length !== 0 &&\n                        target.querySelectorAll('.' + cls.CARD_CLASS + ':not(.e-kanban-dragged-card):not(.e-cloned-card)').length === 0) {\n                        return;\n                    }\n                    else {\n                        target.querySelector('.' + cls.CARD_WRAPPER_CLASS).appendChild(this.dragObj.targetClone);\n                    }\n                }\n                else if (target.classList.contains(cls.CARD_WRAPPER_CLASS) && !closest(target, '.' + cls.SWIMLANE_ROW_CLASS)\n                    && contentCell.querySelectorAll('.' + cls.CARD_CLASS).length === 0) {\n                    target.appendChild(this.dragObj.targetClone);\n                }\n            }\n            else if (keys.length > 1 && contentCell.classList.contains(cls.DROPPING_CLASS)) {\n                this.multiCloneCreate(keys, contentCell);\n            }\n            this.kanbanObj.notify(events.contentReady, {});\n        }\n        if (this.kanbanObj.element.querySelectorAll('.' + cls.DROPPING_CLASS).length === 0) {\n            this.cellDropping();\n        }\n        var isCollapsed = false;\n        if (contentCell) {\n            isCollapsed = contentCell.classList.contains(cls.COLLAPSED_CLASS) && contentCell.classList.contains(cls.DROPPING_CLASS);\n        }\n        if (isCollapsed) {\n            this.toggleVisible(target);\n            addClass([contentCell], cls.TOGGLE_VISIBLE_CLASS);\n        }\n        var tColumn = [].slice.call(this.kanbanObj.element.querySelectorAll('.' + cls.TOGGLE_VISIBLE_CLASS));\n        if (tColumn.length > 0 && !target.classList.contains(cls.TOGGLE_VISIBLE_CLASS)\n            && !closest(target, '.' + cls.TOGGLE_VISIBLE_CLASS)) {\n            this.toggleVisible(target, tColumn.slice(-1)[0]);\n            removeClass(tColumn, cls.TOGGLE_VISIBLE_CLASS);\n        }\n        this.kanbanObj.notify(events.contentReady, {});\n        var multiKeyTarget = closest(target, '.' + cls.MULTI_COLUMN_KEY_CLASS);\n        if (multiKeyTarget) {\n            var columnKeys = [].slice.call(this.kanbanObj.element.querySelectorAll('.' + cls.MULTI_COLUMN_KEY_CLASS + ':not(.' +\n                cls.DISABLED_CLASS + ')')).filter(function (element) { return _this.getColumnKey(element) === _this.getColumnKey(multiKeyTarget); });\n            if (columnKeys.length > 0) {\n                addClass(columnKeys, cls.MULTI_ACTIVE_CLASS);\n                if (columnKeys[0].previousElementSibling) {\n                    addClass([columnKeys[0].previousElementSibling], 'e-multi-bottom-border');\n                }\n            }\n        }\n        document.body.style.cursor = (contentCell && contentCell.classList.contains(cls.DROPPING_CLASS)) ? '' : 'not-allowed';\n        if (cardElement && !(closest(cardElement, '.' + cls.CONTENT_CELLS_CLASS)).classList.contains(cls.DROPPING_CLASS)) {\n            cardElement.style.cursor = 'not-allowed';\n            document.body.style.cursor = 'not-allowed';\n        }\n        if (this.isExternalDrop && document.body.style.cursor === 'not-allowed') {\n            document.body.style.cursor = '';\n        }\n        if (document.body.style.cursor === 'not-allowed') {\n            this.removeElement(this.dragObj.targetClone, this.kanbanObj);\n            this.multiCloneRemove();\n        }\n        this.updateScrollPosition();\n        var dragArgs = { data: this.dragObj.cardDetails, event: e, element: this.dragObj.selectedCards };\n        this.kanbanObj.trigger(events.drag, dragArgs);\n        this.parent.isExternalKanbanDrop = false;\n        this.isExternalDrop = false;\n    };\n    DragAndDrop.prototype.removeElement = function (element, kanbanObj) {\n        kanbanObj = kanbanObj ? kanbanObj : this.parent;\n        if (kanbanObj.element.getElementsByClassName(element.className).length > 0) {\n            remove(element);\n        }\n    };\n    DragAndDrop.prototype.externalDrop = function (target) {\n        var _this = this;\n        this.parent.externalDropId.forEach(function (externalDropId) {\n            var targetRootElement = closest(target, externalDropId);\n            if (targetRootElement) {\n                if (targetRootElement.classList.contains('e-kanban')) {\n                    _this.parent.externalDropObj = document.querySelector(externalDropId).ej2_instances[0];\n                    _this.parent.isExternalKanbanDrop = true;\n                    var className = '.' + cls.CONTENT_ROW_CLASS + ':not(.' + cls.SWIMLANE_ROW_CLASS +\n                        '):not(.' + cls.COLLAPSED_CLASS + ') .' + cls.CONTENT_CELLS_CLASS;\n                    var cells = [].slice.call(_this.parent.externalDropObj.element.querySelectorAll(className));\n                    addClass(cells, cls.DROPPING_CLASS);\n                }\n                else {\n                    _this.isExternalDrop = true;\n                }\n            }\n        });\n    };\n    DragAndDrop.prototype.multiCloneCreate = function (keys, contentCell) {\n        var offsetHeight = contentCell.offsetHeight;\n        var limitEle = contentCell.querySelector('.' + cls.LIMITS_CLASS);\n        if (limitEle) {\n            offsetHeight -= limitEle.offsetHeight;\n        }\n        this.dragObj.targetCloneMulti.style.height = formatUnit(offsetHeight);\n        if (contentCell.querySelector('.' + cls.SHOW_ADD_BUTTON)) {\n            addClass([contentCell.querySelector('.' + cls.SHOW_ADD_BUTTON)], cls.MULTI_CARD_WRAPPER_CLASS);\n        }\n        addClass([contentCell.querySelector('.' + cls.CARD_WRAPPER_CLASS)], cls.MULTI_CARD_WRAPPER_CLASS);\n        contentCell.querySelector('.' + cls.CARD_WRAPPER_CLASS).style.height = 'auto';\n        contentCell.style.borderStyle = 'none';\n        this.removeElement(this.dragObj.targetClone);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            var dragCell = closest(this.dragObj.draggedClone, '.' + cls.CONTENT_CELLS_CLASS);\n            var transition = this.kanbanObj.columns[dragCell.cellIndex].transitionColumns;\n            var allowTransition = this.allowedTransition(this.dragObj.element.getAttribute('data-key'), key, transition);\n            var name_1 = allowTransition ? '' : ' ' + cls.DISABLED_CLASS;\n            var colKey = createElement('div', {\n                className: cls.MULTI_COLUMN_KEY_CLASS + name_1,\n                attrs: { 'data-key': key.trim() }\n            });\n            var text = createElement('div', { className: 'e-text', innerHTML: key.trim() });\n            contentCell.appendChild(this.dragObj.targetCloneMulti).appendChild(colKey).appendChild(text);\n            colKey.style.cursor = allowTransition ? '' : 'not-allowed';\n            colKey.style.lineHeight = colKey.style.height = formatUnit((offsetHeight / keys.length));\n            text.style.top = formatUnit((offsetHeight / 2) - (text.offsetHeight / 2));\n        }\n    };\n    DragAndDrop.prototype.allowedTransition = function (currentCardKey, targetCardKey, allowedKey) {\n        var allowTransition = true;\n        var targetKey = targetCardKey.split(',');\n        for (var i = 0; i < targetKey.length; i++) {\n            if (currentCardKey === targetKey[i].trim()) {\n                return true;\n            }\n            if (allowedKey) {\n                if (allowedKey.length === 1 && allowedKey[0].length === 0) {\n                    return true;\n                }\n                for (var j = 0; j < allowedKey.length; j++) {\n                    if (targetKey[i].trim() === allowedKey[j].trim()) {\n                        return true;\n                    }\n                    else {\n                        allowTransition = false;\n                    }\n                }\n            }\n        }\n        return allowTransition;\n    };\n    DragAndDrop.prototype.cellDropping = function () {\n        var _this = this;\n        var dragCell = closest(this.dragObj.draggedClone, '.' + cls.CONTENT_CELLS_CLASS);\n        var dragRow = closest(this.dragObj.draggedClone, '.' + cls.CONTENT_ROW_CLASS);\n        this.addDropping(dragRow, dragCell);\n        if (dragCell && dragCell.classList.contains(cls.DROP_CLASS)) {\n            addClass([dragCell], cls.DROPPING_CLASS);\n        }\n        if (this.kanbanObj.swimlaneSettings.keyField && this.kanbanObj.swimlaneSettings.allowDragAndDrop) {\n            var className = '.' + cls.CONTENT_ROW_CLASS + ':not(.' + cls.SWIMLANE_ROW_CLASS + '):not(.' + cls.COLLAPSED_CLASS + ')';\n            var rows = [].slice.call(this.kanbanObj.element.querySelectorAll(className));\n            [].slice.call(rows).forEach(function (row) {\n                if (dragRow !== row) {\n                    _this.addDropping(row, dragCell);\n                }\n            });\n        }\n    };\n    DragAndDrop.prototype.addDropping = function (dragRow, dragCell) {\n        var _this = this;\n        if (dragCell && dragRow) {\n            [].slice.call(dragRow.children).forEach(function (cell) {\n                var transition = _this.kanbanObj.columns[dragCell.cellIndex].transitionColumns;\n                if (cell !== dragCell && cell.classList.contains(cls.DROP_CLASS) &&\n                    _this.allowedTransition(dragCell.getAttribute('data-key'), cell.getAttribute('data-key'), transition)) {\n                    addClass([cell], cls.DROPPING_CLASS);\n                }\n            });\n        }\n    };\n    DragAndDrop.prototype.keydownHandler = function (e) {\n        if (e.code === 'Escape' && this.dragObj.cloneElement) {\n            EventHandler.remove(this.dragObj.cloneElement, 'keydown', this.keydownHandler);\n            this.dragObj.element.removeAttribute('aria-grabbed');\n            this.dragStopClear();\n            this.dragStopPostClear();\n        }\n    };\n    DragAndDrop.prototype.dragStop = function (e) {\n        var _this = this;\n        var contentCell = closest(this.dragObj.targetClone, '.' + cls.CONTENT_CELLS_CLASS);\n        var columnKey;\n        var dropIndex;\n        EventHandler.remove(document.body, 'keydown', this.keydownHandler);\n        if (this.dragObj.targetClone.parentElement) {\n            var className = '.' + cls.CARD_CLASS + ':not(.' + cls.DRAGGED_CARD_CLASS + '),.' + cls.DROPPED_CLONE_CLASS;\n            var element = [].slice.call(this.dragObj.targetClone.parentElement.querySelectorAll(className));\n            dropIndex = element.indexOf(this.dragObj.targetClone);\n        }\n        if (!isNullOrUndefined(this.kanbanObj) && this.kanbanObj.element.querySelector('.' + cls.TARGET_MULTI_CLONE_CLASS)) {\n            columnKey = closest(e.target, '.' + cls.MULTI_COLUMN_KEY_CLASS + ':not(.' + cls.DISABLED_CLASS + ')');\n        }\n        if (contentCell || columnKey) {\n            var cardStatus_1;\n            if (contentCell) {\n                cardStatus_1 = this.getColumnKey(contentCell);\n            }\n            else {\n                cardStatus_1 = this.getColumnKey(columnKey);\n                contentCell = closest(columnKey, '.' + cls.CONTENT_CELLS_CLASS);\n            }\n            if (this.dragObj.selectedCards instanceof HTMLElement) {\n                this.updateDroppedData(this.dragObj.selectedCards, cardStatus_1, contentCell);\n            }\n            else {\n                this.dragObj.selectedCards.forEach(function (element) { _this.updateDroppedData(element, cardStatus_1, contentCell); });\n            }\n            if (this.parent.sortSettings.field && this.parent.sortSettings.sortBy === 'Index') {\n                this.changeOrder(this.dragObj.modifiedData);\n            }\n        }\n        if (this.dragObj.modifiedData.length === 0) {\n            this.dragObj.modifiedData = this.dragObj.cardDetails;\n        }\n        var dragArgs = {\n            cancel: false, data: this.dragObj.modifiedData, event: e, element: this.dragObj.selectedCards,\n            dropIndex: dropIndex\n        };\n        this.parent.trigger(events.dragStop, dragArgs, function (dragEventArgs) {\n            _this.dragStopClear();\n            if (!dragEventArgs.cancel) {\n                if (contentCell || columnKey) {\n                    var updateCard = dragEventArgs.data instanceof Array &&\n                        dragEventArgs.data.length > 1 ? dragEventArgs.data :\n                        dragEventArgs.data[0];\n                    _this.parent.crudModule.updateCard(updateCard, dragEventArgs.dropIndex);\n                }\n            }\n            _this.dragStopPostClear();\n        });\n    };\n    DragAndDrop.prototype.dragStopClear = function () {\n        this.removeElement(this.dragObj.draggedClone);\n        this.removeElement(this.dragObj.targetClone, this.kanbanObj);\n        this.removeElement(this.dragObj.cloneElement);\n        var dragMultiClone = [].slice.call(this.parent.element.querySelectorAll('.' + cls.DRAGGED_CLONE_CLASS));\n        dragMultiClone.forEach(function (clone) { remove(clone); });\n        this.dragObj.element.style.removeProperty('width');\n        this.multiCloneRemove();\n        if (this.dragObj.selectedCards instanceof HTMLElement) {\n            removeClass([this.dragObj.selectedCards], cls.DRAGGED_CARD_CLASS);\n        }\n        else {\n            removeClass(this.dragObj.selectedCards, cls.DRAGGED_CARD_CLASS);\n        }\n        clearInterval(this.dragObj.navigationInterval);\n        this.dragObj.navigationInterval = null;\n        if (document.body.style.cursor === 'not-allowed') {\n            document.body.style.cursor = '';\n        }\n        var styleCards = [].slice.call(this.parent.element.querySelectorAll('.' + cls.CARD_CLASS + '[style]'));\n        styleCards.forEach(function (styleCard) { styleCard.style.cursor = ''; });\n        var className = '.' + cls.CONTENT_ROW_CLASS + ':not(.' + cls.SWIMLANE_ROW_CLASS + ')';\n        var cells = [].slice.call(this.parent.element.querySelectorAll(className + ' .' + cls.CONTENT_CELLS_CLASS));\n        cells.forEach(function (cell) { return removeClass([cell], cls.DROPPING_CLASS); });\n        if (this.parent.externalDropObj) {\n            var externalCells = [].slice.call(this.parent.externalDropObj.element.querySelectorAll(className + ' .' +\n                cls.CONTENT_CELLS_CLASS));\n            externalCells.forEach(function (externalCell) { return removeClass([externalCell], cls.DROPPING_CLASS); });\n        }\n    };\n    DragAndDrop.prototype.dragStopPostClear = function () {\n        if (this.parent.isAdaptive) {\n            this.parent.touchModule.tabHold = false;\n        }\n        this.dragObj.cardDetails = this.dragObj.modifiedData = [];\n        this.isDragging = false;\n        this.parent.isExternalKanbanDrop = false;\n        this.parent.externalDropObj = null;\n    };\n    DragAndDrop.prototype.updateDroppedData = function (element, cardStatus, contentCell) {\n        var crudObj = this.parent.getCardDetails(element);\n        var crudData = extend({}, crudObj, null, true);\n        if (cardStatus.split(',').length === 1) {\n            crudData[this.parent.keyField] = cardStatus;\n        }\n        if (this.parent.swimlaneSettings.keyField && this.parent.swimlaneSettings.allowDragAndDrop) {\n            var prev = closest(contentCell, '.' + cls.CONTENT_ROW_CLASS).previousElementSibling;\n            if (this.parent.isAdaptive) {\n                var keyField = this.parent.layoutModule.kanbanRows[this.parent.layoutModule.swimlaneIndex].keyField;\n                crudData[this.parent.swimlaneSettings.keyField] = keyField;\n            }\n            else {\n                crudData[this.parent.swimlaneSettings.keyField] = this.getColumnKey(prev);\n            }\n        }\n        this.dragObj.modifiedData.push(crudData);\n    };\n    DragAndDrop.prototype.changeOrder = function (modifieddata) {\n        var _this = this;\n        var prevele = false;\n        var element = this.kanbanObj.sortSettings.direction === 'Ascending' ?\n            this.dragObj.targetClone.previousElementSibling : this.dragObj.targetClone.nextElementSibling;\n        if (element && !element.classList.contains(cls.DRAGGED_CARD_CLASS) && !element.classList.contains(cls.CLONED_CARD_CLASS)\n            && !element.classList.contains(cls.DRAGGED_CLONE_CLASS)) {\n            prevele = true;\n        }\n        else if (this.dragObj.targetClone.nextElementSibling && this.kanbanObj.sortSettings.direction === 'Ascending') {\n            element = this.dragObj.targetClone.nextElementSibling;\n        }\n        else if (this.dragObj.targetClone.previousElementSibling && this.kanbanObj.sortSettings.direction === 'Descending') {\n            element = this.dragObj.targetClone.previousElementSibling;\n        }\n        else {\n            return;\n        }\n        if (element.classList.contains(cls.CARD_CLASS)) {\n            var obj = this.kanbanObj.getCardDetails(element);\n            var keyIndex_1 = obj[this.kanbanObj.sortSettings.field];\n            if (modifieddata.length > 1 && this.kanbanObj.sortSettings.direction === 'Descending') {\n                modifieddata = modifieddata.reverse();\n            }\n            modifieddata.forEach(function (data, index) {\n                if (prevele) {\n                    data[_this.kanbanObj.sortSettings.field] = ++keyIndex_1;\n                }\n                else if (keyIndex_1 !== 1 && index <= data[_this.kanbanObj.sortSettings.field]) {\n                    data[_this.kanbanObj.sortSettings.field] = --keyIndex_1;\n                }\n                else if (keyIndex_1 === 1) {\n                    data[_this.kanbanObj.sortSettings.field] = index + 1;\n                }\n            });\n        }\n    };\n    DragAndDrop.prototype.toggleVisible = function (target, tColumn) {\n        var _this = this;\n        var headerCells = '.' + cls.HEADER_CELLS_CLASS + ':not(.' + cls.STACKED_HEADER_CELL_CLASS + ')';\n        var lists = [].slice.call(this.kanbanObj.element.querySelectorAll(headerCells));\n        lists.forEach(function (list) {\n            if (_this.getColumnKey(list) === _this.getColumnKey(tColumn || target)) {\n                _this.kanbanObj.actionModule.columnToggle(list);\n            }\n        });\n        var cloneTarget = closest(this.dragObj.draggedClone, '.' + cls.CONTENT_CELLS_CLASS);\n        if (cloneTarget) {\n            var width = formatUnit(cloneTarget.offsetWidth - events.cardSpace);\n            this.dragObj.draggedClone.style.width = width;\n            this.dragObj.cloneElement.style.width = width;\n        }\n    };\n    DragAndDrop.prototype.multiCloneRemove = function () {\n        var cloneMulti = [].slice.call(this.kanbanObj.element.querySelectorAll('.' + cls.TARGET_MULTI_CLONE_CLASS));\n        if (cloneMulti.length > 0) {\n            var columnKey = [].slice.call(this.kanbanObj.element.querySelectorAll('.' + cls.MULTI_COLUMN_KEY_CLASS));\n            columnKey.forEach(function (node) { return remove(node); });\n            cloneMulti.forEach(function (node) {\n                var cell = closest(node, '.' + cls.CONTENT_CELLS_CLASS);\n                if (cell) {\n                    cell.style.borderStyle = '';\n                    if (cell.querySelector('.' + cls.SHOW_ADD_BUTTON)) {\n                        removeClass([cell.querySelector('.' + cls.SHOW_ADD_BUTTON)], cls.MULTI_CARD_WRAPPER_CLASS);\n                    }\n                    removeClass([cell.querySelector('.' + cls.CARD_WRAPPER_CLASS)], cls.MULTI_CARD_WRAPPER_CLASS);\n                }\n            });\n            this.removeElement(this.dragObj.targetCloneMulti, this.kanbanObj);\n        }\n    };\n    DragAndDrop.prototype.calculateArgs = function (e) {\n        var eventArgs = this.getPageCoordinates(e);\n        this.dragObj.pageY = eventArgs.pageY;\n        this.dragObj.pageX = eventArgs.pageX;\n        this.isDragging = true;\n        if (this.kanbanObj.isAdaptive && this.kanbanObj.tooltipModule) {\n            this.kanbanObj.tooltipModule.tooltipObj.close();\n        }\n    };\n    DragAndDrop.prototype.getPageCoordinates = function (e) {\n        var eventArgs = e.event;\n        return eventArgs && eventArgs.changedTouches ? eventArgs.changedTouches[0] : e.changedTouches ? e.changedTouches[0] :\n            eventArgs || e;\n    };\n    DragAndDrop.prototype.getColumnKey = function (target) {\n        if (target && target.getAttribute('data-key')) {\n            return target.getAttribute('data-key').trim();\n        }\n        return '';\n    };\n    DragAndDrop.prototype.updateScrollPosition = function () {\n        var _this = this;\n        if (isNullOrUndefined(this.dragObj.navigationInterval)) {\n            this.dragObj.navigationInterval = window.setInterval(function () { _this.autoScroll(); }, 100);\n        }\n    };\n    DragAndDrop.prototype.autoScrollValidation = function () {\n        var pageY = this.dragObj.pageY;\n        var pageX = this.dragObj.pageX;\n        var autoScrollDistance = 30;\n        var dragEdges = { left: false, right: false, top: false, bottom: false };\n        var viewBoundaries = this.kanbanObj.element.querySelector('.' + cls.CONTENT_CLASS).getBoundingClientRect();\n        if ((pageY < viewBoundaries.top + autoScrollDistance + window.pageYOffset) &&\n            (pageY > viewBoundaries.top + window.pageYOffset)) {\n            dragEdges.top = true;\n        }\n        if ((pageY > (viewBoundaries.bottom - autoScrollDistance) + window.pageYOffset) &&\n            (pageY < viewBoundaries.bottom + window.pageYOffset)) {\n            dragEdges.bottom = true;\n        }\n        if ((pageX < viewBoundaries.left + autoScrollDistance + window.pageXOffset) &&\n            (pageX > viewBoundaries.left + window.pageXOffset)) {\n            dragEdges.left = true;\n        }\n        if ((pageX > (viewBoundaries.right - autoScrollDistance) + window.pageXOffset) &&\n            (pageX < viewBoundaries.right + window.pageXOffset)) {\n            dragEdges.right = true;\n        }\n        this.dragEdges = dragEdges;\n    };\n    DragAndDrop.prototype.autoScroll = function () {\n        this.autoScrollValidation();\n        var scrollSensitivity = 30;\n        if (this.kanbanObj.isAdaptive) {\n            var parent_1;\n            if (this.dragEdges.top || this.dragEdges.bottom) {\n                if (this.dragObj.targetClone) {\n                    parent_1 = closest(this.dragObj.targetClone, '.' + cls.CARD_WRAPPER_CLASS);\n                }\n                else {\n                    parent_1 = closest(this.dragObj.draggedClone, '.' + cls.CARD_WRAPPER_CLASS);\n                }\n            }\n            else if (this.dragEdges.right || this.dragEdges.left) {\n                parent_1 = this.kanbanObj.element.querySelector('.' + cls.CONTENT_CLASS);\n            }\n            if (parent_1) {\n                var yIsScrollable = parent_1.offsetHeight <= parent_1.scrollHeight;\n                var xIsScrollable = parent_1.offsetWidth <= parent_1.scrollWidth;\n                var yInBounds = parent_1.scrollTop >= 0 && parent_1.scrollTop + parent_1.offsetHeight <= parent_1.scrollHeight;\n                var xInBounds = parent_1.scrollLeft >= 0 && parent_1.scrollLeft + parent_1.offsetWidth <= parent_1.scrollWidth;\n                if (yIsScrollable && yInBounds && (this.dragEdges.top || this.dragEdges.bottom)) {\n                    parent_1.scrollTop += this.dragEdges.top ? -(scrollSensitivity + 36) : scrollSensitivity;\n                }\n                if (xIsScrollable && xInBounds && (this.dragEdges.left || this.dragEdges.right)) {\n                    var scroll_1 = (this.kanbanObj.layoutModule.getWidth() * (this.kanbanObj.columns.length - 1)) >\n                        parent_1.scrollLeft;\n                    if (scroll_1 || this.dragEdges.left) {\n                        parent_1.scrollLeft += this.dragEdges.left ? -scrollSensitivity : scrollSensitivity;\n                    }\n                }\n            }\n        }\n        else {\n            var parent_2 = this.kanbanObj.element.querySelector('.' + cls.CONTENT_CLASS);\n            var column = this.dragObj.targetClone.parentElement;\n            var yScrollable = parent_2.offsetHeight <= parent_2.scrollHeight;\n            var xScrollable = parent_2.offsetWidth <= parent_2.scrollWidth;\n            var yBounds = yScrollable && parent_2.scrollTop >= 0 && parent_2.scrollTop + parent_2.offsetHeight <= parent_2.scrollHeight;\n            var xBounds = xScrollable && parent_2.scrollLeft >= 0 && parent_2.scrollLeft + parent_2.offsetWidth <= parent_2.scrollWidth;\n            if (yBounds && (this.dragEdges.top || this.dragEdges.bottom)) {\n                parent_2.scrollTop += this.dragEdges.top ? -scrollSensitivity : scrollSensitivity;\n                if (column) {\n                    column.scrollTop += this.dragEdges.top ? -scrollSensitivity : scrollSensitivity;\n                }\n            }\n            if (xBounds && (this.dragEdges.left || this.dragEdges.right)) {\n                parent_2.scrollLeft += this.dragEdges.left ? -scrollSensitivity : scrollSensitivity;\n                if (column) {\n                    column.scrollLeft += this.dragEdges.left ? -scrollSensitivity : scrollSensitivity;\n                }\n            }\n            if (this.dragObj.pageY - window.scrollY < scrollSensitivity) {\n                window.scrollTo(window.scrollX, window.scrollY - scrollSensitivity);\n            }\n            else if (window.innerHeight - (this.dragObj.pageY - window.scrollY) < scrollSensitivity) {\n                window.scrollTo(window.scrollX, window.scrollY + scrollSensitivity);\n            }\n        }\n    };\n    DragAndDrop.prototype.unWireDragEvents = function (element) {\n        var dragInstance = element.ej2_instances[0];\n        if (dragInstance && !dragInstance.isDestroyed) {\n            dragInstance.destroy();\n        }\n    };\n    return DragAndDrop;\n}());\nexport { DragAndDrop };\n"]},"metadata":{},"sourceType":"module"}