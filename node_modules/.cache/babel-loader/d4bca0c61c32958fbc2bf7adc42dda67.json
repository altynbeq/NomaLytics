{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\n\nvar PaneProperties =\n/** @class */\nfunction (_super) {\n  __extends(PaneProperties, _super);\n\n  function PaneProperties() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], PaneProperties.prototype, \"size\", void 0);\n\n  __decorate([Property(false)], PaneProperties.prototype, \"collapsible\", void 0);\n\n  __decorate([Property(false)], PaneProperties.prototype, \"collapsed\", void 0);\n\n  __decorate([Property(true)], PaneProperties.prototype, \"resizable\", void 0);\n\n  __decorate([Property(null)], PaneProperties.prototype, \"min\", void 0);\n\n  __decorate([Property(null)], PaneProperties.prototype, \"max\", void 0);\n\n  __decorate([Property()], PaneProperties.prototype, \"content\", void 0);\n\n  __decorate([Property('')], PaneProperties.prototype, \"cssClass\", void 0);\n\n  return PaneProperties;\n}(ChildProperty);\n\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\n\nvar Splitter =\n/** @class */\nfunction (_super) {\n  __extends(Splitter, _super);\n  /**\n   * Initializes a new instance of the Splitter class.\n   *\n   * @param options  - Specifies Splitter model properties as options.\n   * @param element  - Specifies the element that is rendered as an Splitter.\n   */\n\n\n  function Splitter(options, element) {\n    return _super.call(this, options, element) || this;\n  }\n  /**\n   * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n   *\n   * @param  {SplitterModel} newProp - specifies the new property\n   * @param  {SplitterModel} oldProp - specifies the old property\n   * @returns {void}\n   * @private\n   */\n\n\n  Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n    if (!this.element.classList.contains(ROOT)) {\n      return;\n    }\n\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'height':\n          this.setSplitterSize(this.element, newProp.height, 'height');\n          break;\n\n        case 'width':\n          this.setSplitterSize(this.element, newProp.width, 'width');\n          break;\n\n        case 'cssClass':\n          this.setCssClass(this.element, newProp.cssClass);\n          break;\n\n        case 'enabled':\n          this.isEnabled(this.enabled);\n          break;\n\n        case 'enableReversePanes':\n          this.setReversePane();\n          break;\n\n        case 'separatorSize':\n          this.setSeparatorSize(newProp.separatorSize);\n          break;\n\n        case 'orientation':\n          this.changeOrientation(newProp.orientation);\n          break;\n\n        case 'paneSettings':\n          {\n            if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n              var paneCounts = Object.keys(newProp.paneSettings);\n\n              for (var i = 0; i < paneCounts.length; i++) {\n                var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n\n                for (var j = 0; j < changedPropsCount; j++) {\n                  var property = Object.keys(newProp.paneSettings[index])[j];\n\n                  switch (property) {\n                    case 'content':\n                      {\n                        var newValue = Object(newProp.paneSettings[index])[property];\n\n                        if (!isNullOrUndefined(newValue)) {\n                          this.allPanes[index].innerHTML = '';\n                          this.setTemplate(newValue, this.allPanes[index]);\n                        }\n\n                        break;\n                      }\n\n                    case 'resizable':\n                      {\n                        var newVal = Object(newProp.paneSettings[index])[property];\n                        this.resizableModel(index, newVal);\n                        break;\n                      }\n\n                    case 'collapsible':\n                      this.collapsibleModelUpdate(index);\n                      break;\n\n                    case 'collapsed':\n                      // eslint-disable-next-line\n                      newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                      break;\n\n                    case 'cssClass':\n                      this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                      break;\n\n                    case 'size':\n                      {\n                        var newValSize = Object(newProp.paneSettings[index])[property];\n\n                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                          this.updatePaneSize(newValSize, index);\n                        }\n\n                        break;\n                      }\n                  }\n                }\n              }\n            } else {\n              this.destroyPaneSettings();\n              this.allBars = [];\n              this.allPanes = [];\n              this.createSplitPane(this.element);\n              this.addSeparator(this.element);\n              this.getPanesDimensions();\n              this.setRTL(this.enableRtl);\n              this.isCollapsed();\n            }\n\n            break;\n          }\n\n        case 'enableRtl':\n          this.setRTL(newProp.enableRtl);\n          break;\n      }\n    }\n  };\n\n  Splitter.prototype.updatePaneSize = function (newValSize, index) {\n    this.allPanes[index].style.flexBasis = newValSize;\n    var flexPaneIndexes = [];\n    var staticPaneWidth;\n    var flexCount = 0;\n\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n        flexPaneIndexes[flexCount] = i;\n        flexCount++;\n      } else if (this.paneSettings[i].size) {\n        staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n      }\n    }\n\n    staticPaneWidth = this.orientation === 'Horizontal' ? this.allBars[0].offsetWidth * this.allBars.length + staticPaneWidth : this.allBars[0].offsetHeight * this.allBars.length + staticPaneWidth;\n    var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight) - staticPaneWidth - this.border * 2;\n    var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n\n    for (var j = 0; j < flexPaneIndexes.length; j++) {\n      this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n    }\n\n    this.allPanes[index].classList.add(STATIC_PANE);\n  };\n\n  Splitter.prototype.initializeValues = function () {\n    this.allPanes = [];\n    this.paneOrder = [];\n    this.separatorOrder = [];\n    this.allBars = [];\n    this.previousCoordinates = {};\n    this.currentCoordinates = {};\n    this.updatePrePaneInPercentage = false;\n    this.updateNextPaneInPercentage = false;\n    this.panesDimensions = [];\n    this.border = 0;\n    this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n    this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n    this.iconsDelay = 300;\n    this.templateElement = [];\n    this.collapseFlag = false;\n    this.expandFlag = true;\n  };\n\n  Splitter.prototype.preRender = function () {\n    this.initializeValues();\n    this.onReportWindowSize = this.reportWindowSize.bind(this);\n    this.onMouseMoveHandler = this.onMouseMove.bind(this);\n    this.onMouseUpHandler = this.onMouseUp.bind(this);\n    this.onTouchMoveHandler = this.onMouseMove.bind(this);\n    this.onTouchEndHandler = this.onMouseUp.bind(this);\n    this.wrapper = this.element.cloneNode(true);\n    this.wrapperParent = this.element.parentElement;\n    removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n    var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n    addClass([this.element], orientation);\n    var name = Browser.info.name;\n    var css = name === 'msie' ? 'e-ie' : '';\n    this.setCssClass(this.element, css);\n\n    if (Browser.isDevice) {\n      addClass([this.element], SPLIT_TOUCH);\n    }\n  };\n\n  Splitter.prototype.getPersistData = function () {\n    return this.addOnPersist(['paneSettings']);\n  };\n  /**\n   * Returns the current module name.\n   *\n   * @returns {string} - returns the string value\n   * @private\n   */\n\n\n  Splitter.prototype.getModuleName = function () {\n    return 'splitter';\n  };\n  /**\n   * To Initialize the control rendering\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Splitter.prototype.render = function () {\n    this.checkDataAttributes();\n    this.setCssClass(this.element, this.cssClass);\n    this.isEnabled(this.enabled);\n    this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n    this.createSplitPane(this.element);\n    this.addSeparator(this.element);\n    this.getPanesDimensions();\n    this.setPaneSettings();\n    this.setRTL(this.enableRtl);\n\n    if (this.enableReversePanes) {\n      this.setReversePane();\n    }\n\n    this.collapseFlag = true;\n    this.isCollapsed();\n    this.collapseFlag = false;\n    EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    this.renderComplete();\n    this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n    EventHandler.add(this.element, 'keydown', this.onMove, this);\n  };\n\n  Splitter.prototype.onDocumentClick = function (e) {\n    if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n      this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n      this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n    }\n  };\n\n  Splitter.prototype.checkPaneSize = function (e) {\n    var prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n    var nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n    var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n\n    if (this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0) {\n      var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n      var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n      this.totalPercent = previousFlexBasis + nextFlexBasis;\n      this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n\n      if (e.type === 'keydown' && !isNullOrUndefined(e.keyCode)) {\n        if ((e.keyCode === 39 || e.keyCode === 40) && nextPaneSize > 0 && this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < this.convertPercentageToPixel(nextFlexBasis - 1 + '%')) {\n          this.previousPane.style.flexBasis = previousFlexBasis + 1 + '%';\n          this.nextPane.style.flexBasis = nextFlexBasis - 1 + '%';\n        } else if ((e.keyCode === 37 || e.keyCode === 38) && prePaneSize > 0 && this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < this.convertPercentageToPixel(previousFlexBasis - 1 + '%')) {\n          this.previousPane.style.flexBasis = previousFlexBasis - 1 + '%';\n          this.nextPane.style.flexBasis = nextFlexBasis + 1 + '%';\n        }\n      }\n    } else {\n      this.totalWidth = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth + this.nextPane.offsetWidth : this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n\n      if (e.type === 'keydown' && !isNullOrUndefined(e.keyCode)) {\n        if ((e.keyCode === 39 || e.keyCode === 40) && nextPaneSize > 0 && this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < nextPaneSize + splitBarSize) {\n          this.addStaticPaneClass();\n          this.previousPane.style.flexBasis = prePaneSize + splitBarSize + 'px';\n          this.nextPane.style.flexBasis = nextPaneSize < splitBarSize ? '0px' : nextPaneSize - splitBarSize + 'px';\n        } else if ((e.keyCode === 37 || e.keyCode === 38) && prePaneSize > 0 && this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < prePaneSize - splitBarSize) {\n          this.addStaticPaneClass();\n          this.previousPane.style.flexBasis = prePaneSize < splitBarSize ? '0px' : prePaneSize - splitBarSize + 'px';\n          this.nextPane.style.flexBasis = nextPaneSize + splitBarSize + 'px';\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.onMove = function (event) {\n    if (this.allPanes.length > 1) {\n      var index = this.getSeparatorIndex(this.currentSeparator);\n      var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n      var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n      var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n\n      if ((this.orientation !== 'Horizontal' && event.keyCode === 38 || this.orientation === 'Horizontal' && event.keyCode === 39 || this.orientation === 'Horizontal' && event.keyCode === 37 || this.orientation !== 'Horizontal' && event.keyCode === 40) && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || isPrevpaneExpanded && !isNextpaneCollapsed) && document.activeElement.classList.contains(SPLIT_BAR) && this.paneSettings[index].resizable && this.paneSettings[index + 1].resizable) {\n        event.preventDefault();\n        this.checkPaneSize(event);\n        this.triggerResizing(event);\n      } else if (event.keyCode === 13 && this.paneSettings[index].collapsible && document.activeElement.classList.contains(SPLIT_BAR) && this.currentSeparator.classList.contains(SPLIT_BAR_ACTIVE)) {\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n          this.collapse(index);\n          addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        } else {\n          this.expand(index);\n          addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.getMinInPixel = function (minValue) {\n    var min;\n\n    if (isNullOrUndefined(minValue)) {\n      return 0;\n    }\n\n    var paneMinRange = this.convertPixelToNumber(minValue.toString());\n\n    if (minValue.indexOf('%') > 0) {\n      paneMinRange = this.convertPercentageToPixel(minValue);\n    }\n\n    min = this.convertPixelToNumber(paneMinRange.toString());\n    return min;\n  };\n  /**\n   * @param {string} value - specifies the string value\n   * @returns {string} returns the string\n   * @hidden\n   */\n\n\n  Splitter.prototype.sanitizeHelper = function (value) {\n    if (this.enableHtmlSanitizer) {\n      var item = SanitizeHtmlHelper.beforeSanitize();\n      var beforeEvent = {\n        cancel: false,\n        helper: null\n      };\n      extend(item, item, beforeEvent);\n      this.trigger('beforeSanitizeHtml', item);\n\n      if (item.cancel && !isNullOrUndefined(item.helper)) {\n        value = item.helper(value);\n      } else if (!item.cancel) {\n        value = SanitizeHtmlHelper.serializeValue(item, value);\n      }\n    }\n\n    return value;\n  };\n\n  Splitter.prototype.checkDataAttributes = function () {\n    var api;\n    var value; // Element values\n\n    for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n      value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n\n      if (!isNullOrUndefined(value)) {\n        api = this.removeDataPrefix(this.validElementAttributes[dataIndex]); // eslint-disable-next-line\n\n        this[api] = value;\n      }\n    } // Pane values\n\n\n    for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n      for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n        value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n\n        if (!isNullOrUndefined(value)) {\n          api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n          value = api === 'collapsible' || api === 'resizable' ? value === 'true' : value;\n\n          if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n            this.paneSettings[paneIndex] = {\n              size: '',\n              min: null,\n              max: null,\n              content: '',\n              resizable: true,\n              collapsible: false,\n              collapsed: false\n            };\n          } // eslint-disable-next-line\n\n\n          var paneAPI = this.paneSettings[paneIndex][api];\n\n          if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n            // eslint-disable-next-line\n            this.paneSettings[paneIndex][api] = value;\n          }\n\n          if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n            // eslint-disable-next-line\n            this.paneSettings[paneIndex][api] = value;\n          }\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.destroyPaneSettings = function () {\n    [].slice.call(this.element.children).forEach(function (el) {\n      detach(el);\n    });\n    this.restoreElem();\n  };\n\n  Splitter.prototype.setPaneSettings = function () {\n    var childCount = this.allPanes.length;\n    var paneCollection = [];\n    var paneValue = {\n      size: '',\n      min: null,\n      max: null,\n      content: '',\n      resizable: true,\n      collapsed: false,\n      collapsible: false,\n      cssClass: ''\n    };\n\n    for (var i = 0; i < childCount; i++) {\n      if (isNullOrUndefined(this.paneSettings[i])) {\n        paneCollection[i] = paneValue;\n      } else {\n        paneCollection[i] = this.paneSettings[i];\n      }\n    }\n\n    this.setProperties({\n      'paneSettings': paneCollection\n    }, true);\n  };\n\n  Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n    return this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow);\n  };\n\n  Splitter.prototype.removeDataPrefix = function (attribute) {\n    return attribute.slice(attribute.lastIndexOf('-') + 1);\n  };\n\n  Splitter.prototype.setRTL = function (rtl) {\n    // eslint-disable-next-line\n    rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n  };\n\n  Splitter.prototype.setReversePane = function () {\n    this.allPanes = this.allPanes.reverse();\n    this.allBars = this.allBars.reverse();\n    addClass([this.allBars[this.allBars.length - 1]], LAST_BAR);\n    removeClass([this.allBars[0]], LAST_BAR);\n    this.setProperties({\n      'paneSettings': this.paneSettings.reverse()\n    }, true);\n\n    if (this.enableReversePanes) {\n      this.element.setAttribute('dir', 'rtl');\n    } else {\n      this.element.removeAttribute('dir');\n    }\n  };\n\n  Splitter.prototype.setSplitterSize = function (element, size, property) {\n    var style = property === 'width' ? {\n      'width': formatUnit(size)\n    } : {\n      'height': formatUnit(size)\n    };\n    setStyleAttribute(element, style);\n  };\n\n  Splitter.prototype.getPanesDimensions = function () {\n    for (var index = 0; index < this.allPanes.length; index++) {\n      // eslint-disable-next-line\n      this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) : this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n    }\n  };\n\n  Splitter.prototype.setCssClass = function (element, className) {\n    if (className) {\n      addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n    }\n  };\n\n  Splitter.prototype.hideResizer = function (target) {\n    addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n  };\n\n  Splitter.prototype.showResizer = function (target) {\n    if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) && !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n      removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    }\n  };\n\n  Splitter.prototype.resizableModel = function (index, newVal) {\n    var paneIndex = index === this.allBars.length ? index - 1 : index;\n    var i = index;\n    EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n\n    if (newVal) {\n      EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n\n      if (this.isResizable()) {\n        this.showResizer(this.allBars[paneIndex]);\n        removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n        this.allBars[paneIndex].classList.add(RESIZABLE_BAR); // eslint-disable-next-line\n\n        index === this.allBars.length ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n        this.updateResizablePanes(i);\n      }\n    } else {\n      this.updateResizablePanes(i);\n      this.hideResizer(this.allBars[paneIndex]);\n      this.allBars[paneIndex].classList.remove(RESIZABLE_BAR); // eslint-disable-next-line\n\n      index === this.allBars.length ? this.allPanes[index].classList.remove(RESIZABLE_PANE) : this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n    }\n  };\n\n  Splitter.prototype.collapsibleModelUpdate = function (index) {\n    var paneIndex = index === this.allBars.length ? index - 1 : index;\n    var arrow2 = this.orientation === 'Horizontal' ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n    var arrow1 = this.orientation === 'Horizontal' ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n    this.paneCollapsible(this.allPanes[index], index);\n    this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n  };\n\n  Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n    return selectAll('.' + arrow, this.allBars[barIndex])[0];\n  };\n\n  Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n    if (!isNullOrUndefined(index)) {\n      var targetEle = void 0;\n      var lastBarIndex = index === this.allBars.length;\n      var barIndex = lastBarIndex ? index - 1 : index;\n\n      if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n        targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n      } else {\n        targetEle = lastBarIndex ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n      }\n\n      targetEle.click();\n    }\n  };\n\n  Splitter.prototype.isCollapsed = function (index) {\n    var _this = this;\n\n    if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n      return;\n    }\n\n    this.expandFlag = false;\n\n    if (!isNullOrUndefined(index)) {\n      this.collapseFlag = true;\n      var targetEle = void 0;\n      var lastBarIndex = index === this.allBars.length;\n      var barIndex = lastBarIndex ? index - 1 : index;\n\n      if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n        targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n      } else {\n        targetEle = lastBarIndex ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) : this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n      }\n\n      var event_1 = {\n        target: targetEle\n      };\n      var eventArgs = this.beforeAction(event_1);\n      this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n        if (!beforeCollapseArgs.cancel) {\n          var collapsedindex = [];\n          collapsedindex[0] = index;\n          var j = 1;\n\n          for (var i = 0; i < _this.allPanes.length; i++) {\n            if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n              collapsedindex[j] = i;\n              j++;\n            }\n          }\n\n          collapsedindex = collapsedindex.sort();\n\n          _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n\n          for (var i = 0; i < collapsedindex.length; i++) {\n            if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n              _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n            }\n          }\n\n          for (var i = collapsedindex.length; i > 0; i--) {\n            if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n              var targetArrow = _this.targetArrows();\n\n              _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n            }\n          }\n\n          var collapseEventArgs = _this.afterAction(event_1);\n\n          _this.trigger('collapsed', collapseEventArgs);\n\n          _this.collapseFlag = false;\n        }\n      });\n    } else {\n      for (var m = 0; m < this.allPanes.length; m++) {\n        if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n          this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n      }\n\n      for (var m = this.allPanes.length - 1; m >= 0; m--) {\n        if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed && !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n          var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n\n          if (m !== 0) {\n            var targetEle = this.collapseArrow(m - 1, collapseArrow);\n            targetEle.click();\n          }\n\n          if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            var targetEle = this.collapseArrow(m - 1, collapseArrow);\n            targetEle.click();\n          }\n        }\n      }\n    }\n\n    this.expandFlag = true;\n  };\n\n  Splitter.prototype.targetArrows = function () {\n    this.splitterProperty();\n    return {\n      collapseArrow: this.orientation === 'Horizontal' ? ARROW_LEFT : ARROW_UP,\n      lastBarArrow: this.orientation === 'Vertical' ? ARROW_DOWN : ARROW_RIGHT\n    };\n  };\n\n  Splitter.prototype.collapsedOnchange = function (index) {\n    if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed) && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n      this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n    }\n  };\n\n  Splitter.prototype.isEnabled = function (enabled) {\n    // eslint-disable-next-line\n    enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n  };\n\n  Splitter.prototype.setSeparatorSize = function (size) {\n    var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n    var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n\n    for (var index = 0; index < this.allBars.length; index++) {\n      var splitBar = selectAll('.' + separator, this.element)[index];\n      var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n\n      if (this.orientation === 'Horizontal') {\n        splitBar.style.width = sizeValue;\n\n        if (!isNullOrUndefined(resizeBar)) {\n          resizeBar.style.width = sizeValue;\n        }\n      } else {\n        splitBar.style.height = sizeValue;\n\n        if (!isNullOrUndefined(resizeBar)) {\n          resizeBar.style.height = sizeValue;\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.changeOrientation = function (orientation) {\n    var isVertical = orientation === 'Vertical';\n    this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n    this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n\n    for (var index = 0; index < this.allPanes.length; index++) {\n      this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n      this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n    }\n\n    for (var index = 0; index < this.allBars.length; index++) {\n      detach(this.allBars[index]);\n    }\n\n    this.allBars = [];\n    this.addSeparator(this.element);\n  };\n\n  Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n    var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n    return paneEle;\n  };\n\n  Splitter.prototype.collectPanes = function (childNodes) {\n    var elements = [];\n\n    for (var i = 0; i < childNodes.length; i++) {\n      if (childNodes[i].classList.contains(PANE)) {\n        elements.push(childNodes[i]);\n      }\n    }\n\n    return elements;\n  };\n\n  Splitter.prototype.getPrevPane = function (order) {\n    return this.enableReversePanes ? this.getOrderPane(order + 1) : this.getOrderPane(order - 1);\n  };\n\n  Splitter.prototype.getNextPane = function (order) {\n    return this.enableReversePanes ? this.getOrderPane(order - 1) : this.getOrderPane(order + 1);\n  };\n\n  Splitter.prototype.getOrderPane = function (order) {\n    var pane;\n\n    for (var i = 0; i < this.element.children.length; i++) {\n      if (parseInt(this.element.children[i].style.order, 10) === order) {\n        pane = this.element.children[i];\n      }\n    }\n\n    return pane;\n  };\n\n  Splitter.prototype.getOrderIndex = function (order, type) {\n    var index;\n    var panes;\n\n    if (type === 'pane') {\n      panes = this.allPanes;\n    } else {\n      panes = this.allBars;\n    }\n\n    for (var i = 0; i < panes.length; i++) {\n      if (parseInt(panes[i].style.order, 10) === order) {\n        index = i;\n      }\n    }\n\n    return index;\n  };\n\n  Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n    var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px'; // eslint-disable-next-line\n\n    this.orientation === 'Horizontal' ? resizeHanlder.style.width = sizeValue : resizeHanlder.style.height = sizeValue;\n  };\n\n  Splitter.prototype.addResizeHandler = function (currentBar) {\n    var resizeHanlder = this.createElement('div');\n    addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n    this.updateSeparatorSize(resizeHanlder);\n    currentBar.appendChild(resizeHanlder);\n  };\n\n  Splitter.prototype.getHeight = function (target) {\n    var height = this.height;\n    height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n    return height;\n  };\n\n  Splitter.prototype.getWidth = function (target) {\n    var width = this.width;\n    width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n    return width;\n  };\n\n  Splitter.prototype.setDimension = function (height, width) {\n    setStyleAttribute(this.element, {\n      'height': height,\n      'width': width\n    });\n  };\n\n  Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n    if (!isNullOrUndefined(this.paneSettings[index])) {\n      if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n        // eslint-disable-next-line\n        this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n\n        if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n          // eslint-disable-next-line\n          this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n        }\n\n        if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n          if (this.paneSettings[index + 1].collapsible) {\n            // eslint-disable-next-line\n            this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n          }\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.updateIconClass = function () {\n    if (this.orientation === 'Horizontal') {\n      this.leftArrow = ARROW_LEFT;\n      this.rightArrow = ARROW_RIGHT;\n    } else {\n      this.leftArrow = ARROW_UP;\n      this.rightArrow = ARROW_DOWN;\n    }\n  };\n\n  Splitter.prototype.createSeparator = function (i) {\n    var separator = this.createElement('div');\n    this.allBars.push(separator);\n    var arrow1 = this.createElement('button');\n    var arrow2 = this.createElement('button');\n    arrow1.setAttribute('tabindex', '-1');\n    arrow2.setAttribute('tabindex', '-1');\n    arrow1.setAttribute('aria-label', 'Toggle navigation');\n    arrow2.setAttribute('aria-label', 'Toggle navigation');\n    arrow1.setAttribute('type', 'button');\n    arrow2.setAttribute('type', 'button');\n    var size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px'; // eslint-disable-next-line\n\n    var proxy = this;\n\n    if (this.orientation === 'Horizontal') {\n      this.updateIconClass();\n      addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n      addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n      addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n      separator.style.width = size;\n    } else {\n      addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n      addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n      addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n      this.updateIconClass();\n      separator.style.height = size;\n    }\n\n    this.addMouseActions(separator);\n    separator.appendChild(arrow2);\n    this.addResizeHandler(separator);\n    separator.appendChild(arrow1);\n    this.updateCollapseIcons(i, arrow1, arrow2);\n    separator.setAttribute('tabindex', '0');\n\n    if (this.enableReversePanes) {\n      separator.setAttribute('dir', 'ltr');\n    } else {\n      separator.removeAttribute('dir');\n    }\n\n    separator.addEventListener('focus', function () {\n      separator.classList.add(SPLIT_BAR_ACTIVE);\n      proxy.currentSeparator = separator;\n      proxy.getPaneDetails();\n    });\n    separator.addEventListener('blur', function () {\n      separator.classList.remove(SPLIT_BAR_ACTIVE);\n    });\n    return separator;\n  };\n\n  Splitter.prototype.updateResizablePanes = function (index) {\n    this.getPaneDetails(); // eslint-disable-next-line\n\n    this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n  };\n\n  Splitter.prototype.addSeparator = function (target) {\n    var childCount = this.allPanes.length;\n    var clonedEle = target.children;\n    var separator;\n    var proxy;\n\n    for (var i = 0; i < childCount; i++) {\n      if (i < childCount - 1) {\n        separator = this.createSeparator(i);\n        setStyleAttribute(separator, {\n          'order': i * 2 + 1\n        });\n        this.separatorOrder.push(i * 2 + 1);\n        clonedEle[i].parentNode.appendChild(separator);\n        this.currentSeparator = separator;\n        separator.setAttribute('role', 'separator');\n        separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n        this.wireClickEvents();\n\n        if (!isNullOrUndefined(separator)) {\n          if (this.isResizable()) {\n            EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n            var eventName = Browser.info.name === 'msie' ? 'pointerdown' : 'touchstart';\n            EventHandler.add(separator, eventName, this.onMouseDown, this);\n            separator.classList.add(RESIZABLE_BAR);\n            this.updateResizablePanes(i);\n          } else {\n            addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n          }\n        }\n      } else {\n        if (separator) {\n          addClass([separator], LAST_BAR);\n        }\n\n        if (childCount > 1) {\n          this.updateResizablePanes(i);\n        }\n      }\n    }\n\n    if (Browser.info.name === 'msie') {\n      var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n\n      for (var i = 0; i < allBar.length; i++) {\n        var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n        allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n        allBar[i].style.paddingRight = sepSize / 2 + 'px';\n      }\n    }\n  };\n\n  Splitter.prototype.isResizable = function () {\n    var resizable = false;\n\n    if (!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) && this.paneSettings[this.getPreviousPaneIndex()].resizable && !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) && this.paneSettings[this.getNextPaneIndex()].resizable || isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n      resizable = true;\n    }\n\n    return resizable;\n  };\n\n  Splitter.prototype.addMouseActions = function (separator) {\n    var _this = this;\n\n    var sTout;\n    var hoverTimeOut;\n    separator.addEventListener('mouseenter', function () {\n      /* istanbul ignore next */\n      sTout = setTimeout(function () {\n        addClass([separator], [SPLIT_BAR_HOVER]);\n      }, _this.iconsDelay);\n    });\n    separator.addEventListener('mouseleave', function () {\n      clearTimeout(sTout);\n      removeClass([separator], [SPLIT_BAR_HOVER]);\n    });\n    separator.addEventListener('mouseout', function () {\n      clearTimeout(hoverTimeOut);\n    });\n    separator.addEventListener('mouseover', function () {\n      /* istanbul ignore next */\n      hoverTimeOut = setTimeout(function () {\n        addClass([separator], [SPLIT_BAR_HOVER]);\n      }, _this.iconsDelay);\n    });\n  };\n\n  Splitter.prototype.getEventType = function (e) {\n    return e.indexOf('mouse') > -1 ? 'mouse' : 'touch';\n  };\n\n  Splitter.prototype.updateCurrentSeparator = function (target) {\n    this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n  };\n\n  Splitter.prototype.isSeparator = function (target) {\n    return target.classList.contains(SPLIT_BAR) ? false : true;\n  };\n\n  Splitter.prototype.isMouseEvent = function (e) {\n    var isMouse = false;\n\n    if (this.getEventType(e.type) === 'mouse' || !isNullOrUndefined(e.pointerType) && this.getEventType(e.pointerType) === 'mouse') {\n      isMouse = true;\n    }\n\n    return isMouse;\n  };\n\n  Splitter.prototype.updateCursorPosition = function (e, type) {\n    if (this.isMouseEvent(e)) {\n      this.changeCoordinates({\n        x: e.pageX,\n        y: e.pageY\n      }, type);\n    } else {\n      var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n      this.changeCoordinates({\n        x: eventType.pageX,\n        y: eventType.pageY\n      }, type);\n    }\n  };\n\n  Splitter.prototype.changeCoordinates = function (coordinates, type) {\n    if (type === 'previous') {\n      this.previousCoordinates = coordinates;\n    } else {\n      this.currentCoordinates = coordinates;\n    }\n  };\n\n  Splitter.prototype.reportWindowSize = function () {\n    var _this = this;\n\n    var paneCount = this.allPanes.length;\n\n    if (!document.body.contains(this.element)) {\n      document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n      return;\n    }\n\n    for (var i = 0; i < paneCount; i++) {\n      if (isNullOrUndefined(this.paneSettings[i].size)) {\n        this.allPanes[i].classList.remove(STATIC_PANE);\n      }\n\n      if (paneCount - 1 === i) {\n        var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n\n        if (staticPaneCount === paneCount) {\n          removeClass([this.allPanes[i]], STATIC_PANE);\n        }\n      }\n    }\n\n    if (paneCount > 0) {\n      setTimeout(function () {\n        _this.updateSplitterSize(true);\n      }, 200);\n    }\n  };\n\n  Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n    var totalWidth = 0;\n    var flexPaneIndexes = [];\n    var flexCount = 0;\n    var children = this.element.children;\n\n    for (var i = 0; i < children.length; i++) {\n      totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth : children[i].offsetHeight;\n    }\n\n    for (var j = 0; j < this.allBars.length; j++) {\n      totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) + parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) + parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n    }\n\n    var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth - (this.border * 2 + totalWidth) : this.element.offsetHeight - (this.border * 2 + totalWidth);\n\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n        flexPaneIndexes[flexCount] = i;\n        flexCount++;\n      }\n    }\n\n    var avgDiffWidth = diff / flexPaneIndexes.length;\n\n    for (var j = 0; j < flexPaneIndexes.length; j++) {\n      this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ? this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth + 'px' : this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth + 'px';\n    }\n\n    if (this.allPanes.length === 2 && iswindowResize) {\n      var paneCount = this.allPanes.length;\n      var minValue = void 0;\n      var paneMinRange = void 0;\n      var paneIndex = 0;\n      var updatePane = void 0;\n      var flexPane = void 0;\n\n      for (var i = 0; i < paneCount; i++) {\n        if (!isNullOrUndefined(this.paneSettings[i].min)) {\n          paneMinRange = this.convertPixelToNumber(this.paneSettings[i].min.toString());\n\n          if (this.paneSettings[i].min.indexOf('%') > 0) {\n            paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n          }\n\n          minValue = this.convertPixelToNumber(paneMinRange.toString());\n\n          if (this.allPanes[i].offsetWidth < minValue) {\n            if (i === paneIndex) {\n              updatePane = this.allPanes[i];\n              flexPane = this.allPanes[i + 1];\n            } else {\n              updatePane = this.allPanes[i];\n              flexPane = this.allPanes[i - 1];\n            }\n\n            var sizeDiff = minValue - this.allPanes[i].offsetWidth;\n            var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n            updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePane.offsetWidth + sizeDiff) + '%' : updatePane.offsetWidth + sizeDiff + 'px';\n            flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ? this.convertPixelToPercentage(flexPane.offsetWidth - sizeDiff) + '%' : flexPane.offsetWidth - sizeDiff + 'px';\n          }\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.wireResizeEvents = function () {\n    document.addEventListener('mousemove', this.onMouseMoveHandler, true);\n    document.addEventListener('mouseup', this.onMouseUpHandler, true);\n    var touchMoveEvent = Browser.info.name === 'msie' ? 'pointermove' : 'touchmove';\n    var touchEndEvent = Browser.info.name === 'msie' ? 'pointerup' : 'touchend';\n    document.addEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n    document.addEventListener(touchEndEvent, this.onTouchEndHandler, true);\n  };\n\n  Splitter.prototype.unwireResizeEvents = function () {\n    this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n    var touchMoveEvent = Browser.info.name === 'msie' ? 'pointermove' : 'touchmove';\n    var touchEndEvent = Browser.info.name === 'msie' ? 'pointerup' : 'touchend';\n    document.removeEventListener('mousemove', this.onMouseMoveHandler, true);\n    document.removeEventListener('mouseup', this.onMouseUpHandler, true);\n    document.removeEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n    document.removeEventListener(touchEndEvent, this.onTouchEndHandler, true);\n  };\n\n  Splitter.prototype.wireClickEvents = function () {\n    EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n  };\n\n  Splitter.prototype.clickHandler = function (e) {\n    if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n      var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n\n      if (hoverBars.length > 0) {\n        removeClass(hoverBars, SPLIT_BAR_HOVER);\n      }\n\n      e.target.classList.add(SPLIT_BAR_HOVER);\n    }\n\n    var icon = e.target;\n\n    if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n      this.collapseAction(e);\n    }\n\n    if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n      this.expandAction(e);\n    }\n\n    var totalWidth = 0;\n    var children = this.element.children;\n\n    for (var i = 0; i < children.length; i++) {\n      totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth : children[i].offsetHeight;\n    }\n\n    if (totalWidth > this.element.offsetWidth) {\n      this.updateSplitterSize();\n    }\n  };\n\n  Splitter.prototype.expandAction = function (e) {\n    var _this = this;\n\n    this.splitterDetails(e);\n    var eventArgs = this.beforeAction(e);\n\n    if (this.expandFlag) {\n      this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n        if (!beforeExpandArgs.cancel) {\n          _this.expandPane(e);\n        }\n\n        var expandEventArgs = _this.afterAction(e);\n\n        _this.trigger('expanded', expandEventArgs);\n      });\n    } else {\n      this.expandPane(e);\n    }\n  };\n\n  Splitter.prototype.expandPane = function (e) {\n    this.removeStaticPanes();\n    var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n    var flexStatus = !this.previousPane.classList.contains(COLLAPSE_PANE) && this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) && !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2);\n    var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n\n    if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n      removeClass([this.nextPane], EXPAND_PANE);\n      removeClass([this.previousPane], collapseClass);\n      addClass([this.previousPane], EXPAND_PANE);\n      addClass([this.nextPane], collapseClass);\n\n      if (this.expandFlag) {\n        this.updatePaneSettings(this.nextPaneIndex, true);\n      }\n    } else {\n      removeClass([this.previousPane], collapseClass);\n      removeClass([this.nextPane], EXPAND_PANE);\n\n      if (this.expandFlag) {\n        this.updatePaneSettings(this.prevPaneIndex, false);\n      }\n    }\n\n    this.updateIconsOnExpand(e);\n    this.previousPane.setAttribute('aria-expanded', 'true');\n    this.nextPane.setAttribute('aria-expanded', 'false');\n    this.updateFlexGrow(this.checkStaticPanes());\n\n    if (flexStatus) {\n      this.previousPane.classList.remove(EXPAND_PANE);\n      this.previousPane.style.flexGrow = '';\n    }\n  };\n\n  Splitter.prototype.checkStaticPanes = function () {\n    var staticPane = true;\n\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n        if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n          staticPane = true;\n        } else {\n          staticPane = false;\n        }\n      }\n    }\n\n    return staticPane;\n  };\n\n  Splitter.prototype.updateFlexGrow = function (status) {\n    var collapseCount = 0;\n\n    for (var j = 0; j < this.element.children.length; j++) {\n      if (this.element.children[j].classList.contains(COLLAPSE_PANE)) {\n        collapseCount = collapseCount + 1;\n      }\n    }\n\n    var visiblePane = collapseCount === this.allPanes.length - 2;\n    var panes = this.allPanes;\n\n    for (var i = 0; i < panes.length; i++) {\n      if (panes[i].classList.contains(EXPAND_PANE)) {\n        panes[i].style.flexGrow = '1';\n      } else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n        panes[i].style.flexGrow = '0';\n      } else {\n        panes[i].style.flexGrow = '';\n      }\n\n      if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n        this.nextPane.style.flexGrow = '1';\n      }\n\n      if (visiblePane && !this.allPanes[i].classList.contains(COLLAPSE_PANE) && this.paneSettings[i].size && i !== this.allPanes.length - 1) {\n        panes[i].style.flexGrow = '';\n      }\n    }\n  };\n\n  Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n    addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n  };\n\n  Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n    removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n  };\n\n  Splitter.prototype.updateIconsOnCollapse = function (e) {\n    this.splitterProperty();\n\n    if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n      addClass([e.target], HIDE_ICON);\n\n      if (this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.showCurrentBarIcon();\n      }\n\n      this.resizableModel(this.currentBarIndex, false);\n\n      if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n      }\n\n      if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n          this.showTargetBarIcon(this.prevBar, this.leftArrow);\n        } else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n          this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n        }\n      }\n\n      if (!isNullOrUndefined(this.prevBar)) {\n        this.resizableModel(this.currentBarIndex - 1, false);\n        this.hideTargetBarIcon(this.prevBar, this.arrow);\n      }\n\n      if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n      }\n    } else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n      if (this.paneSettings[this.currentBarIndex].resizable) {\n        this.resizableModel(this.currentBarIndex, true);\n      }\n\n      if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.currentBarIndex + 1].resizable) {\n        this.resizableModel(this.currentBarIndex + 1, true);\n      }\n\n      if (!this.paneSettings[this.currentBarIndex].collapsible) {\n        addClass([e.target], HIDE_ICON);\n      }\n\n      if (this.previousPane && this.prevPaneIndex === 0 && this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n      }\n\n      if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n      }\n\n      if (!this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n      }\n\n      if (!isNullOrUndefined(this.nextBar)) {\n        if (this.nextPane.nextElementSibling && this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex + 1].collapsible || !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex].collapsible) {\n          this.showTargetBarIcon(this.nextBar, this.leftArrow);\n        } else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible && this.paneSettings[this.currentBarIndex]) {\n          this.hideTargetBarIcon(this.nextBar, this.arrow);\n        }\n      }\n\n      if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling && !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n        this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n      }\n    }\n  };\n\n  Splitter.prototype.collapseAction = function (e) {\n    var _this = this;\n\n    this.splitterDetails(e);\n    var eventArgs = this.beforeAction(e);\n\n    if (this.collapseFlag) {\n      this.collapsePane(e);\n    } else {\n      this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n        if (!beforeCollapseArgs.cancel) {\n          _this.collapsePane(e);\n\n          var collapseEventArgs = _this.afterAction(e);\n\n          _this.trigger('collapsed', collapseEventArgs);\n        }\n      });\n    }\n  };\n\n  Splitter.prototype.collapsePane = function (e) {\n    this.removeStaticPanes();\n    var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n    var flexStatus = this.previousPane.classList.contains(STATIC_PANE) && !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) && !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && !(collapseCount === this.allPanes.length - 2) || this.nextPane.classList.contains(COLLAPSE_PANE) && !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE);\n    var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n\n    if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n      removeClass([this.previousPane], EXPAND_PANE);\n      removeClass([this.nextPane], collapseClass);\n\n      if (!this.collapseFlag) {\n        this.updatePaneSettings(this.nextPaneIndex, false);\n      }\n    } else {\n      removeClass([this.previousPane], EXPAND_PANE);\n      removeClass([this.nextPane], collapseClass);\n      addClass([this.nextPane], EXPAND_PANE);\n      addClass([this.previousPane], collapseClass);\n\n      if (!this.collapseFlag) {\n        this.updatePaneSettings(this.prevPaneIndex, true);\n      }\n    }\n\n    this.updateIconsOnCollapse(e);\n    this.previousPane.setAttribute('aria-expanded', 'false');\n    this.nextPane.setAttribute('aria-expanded', 'true');\n    this.updateFlexGrow(this.checkStaticPanes());\n\n    if (flexStatus) {\n      this.nextPane.classList.remove(EXPAND_PANE);\n      this.nextPane.style.flexGrow = '';\n    }\n  };\n\n  Splitter.prototype.removeStaticPanes = function () {\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (isNullOrUndefined(this.paneSettings[i].size)) {\n        this.allPanes[i].classList.remove(STATIC_PANE);\n      }\n    }\n  };\n\n  Splitter.prototype.beforeAction = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator,\n      cancel: false\n    };\n    return eventArgs;\n  };\n\n  Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n    var paneValues = this.paneSettings;\n    paneValues[index].collapsed = collapsed;\n    this.setProperties({\n      'paneSettings': paneValues\n    }, true);\n  };\n\n  Splitter.prototype.splitterProperty = function () {\n    this.splitInstance = {\n      currentBarIndex: this.currentBarIndex,\n      nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n      prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n      prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n      nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n      nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n      prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n      nextPaneIndex: this.getNextPaneIndex(),\n      prevPaneIndex: this.getPreviousPaneIndex(),\n      nextPaneNextEle: this.nextPane.nextElementSibling,\n      prevPanePreEle: this.previousPane.previousElementSibling\n    };\n  };\n\n  Splitter.prototype.showCurrentBarIcon = function () {\n    removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n  };\n\n  Splitter.prototype.updateIconsOnExpand = function (e) {\n    this.splitterProperty();\n    addClass([e.target], HIDE_ICON);\n\n    if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n      if (this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.showCurrentBarIcon();\n      }\n\n      if (this.paneSettings[this.nextPaneIndex].collapsible) {\n        removeClass([e.target], HIDE_ICON);\n      }\n\n      if (this.paneSettings[this.currentBarIndex].resizable) {\n        this.resizableModel(this.currentBarIndex, true);\n      }\n\n      if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n        if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n          this.resizableModel(this.currentBarIndex - 1, true);\n        }\n\n        if (this.paneSettings[this.prevPaneIndex].collapsible) {\n          this.showTargetBarIcon(this.prevBar, this.rightArrow);\n        }\n\n        if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n          this.hideTargetBarIcon(this.prevBar, this.arrow);\n\n          if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n            this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n          }\n        } else if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n          this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n        }\n      } else {\n        if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible && this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex - 1].collapsible) {\n          this.showTargetBarIcon(this.prevBar, this.rightArrow);\n        }\n\n        if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n          this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n        }\n      }\n    } else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n      this.resizableModel(this.currentBarIndex, false);\n      this.resizableModel(this.currentBarIndex + 1, false);\n\n      if (this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showCurrentBarIcon();\n      }\n\n      if (!isNullOrUndefined(this.nextBar)) {\n        this.hideTargetBarIcon(this.nextBar, this.arrow);\n      }\n\n      if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && !this.paneSettings[this.nextPaneIndex].collapsible && this.splitInstance.nextPaneCollapsed) {\n        this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n      }\n\n      if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling && this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.nextBar, this.rightArrow);\n      }\n    }\n  };\n\n  Splitter.prototype.afterAction = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator\n    };\n    return eventArgs;\n  };\n\n  Splitter.prototype.currentIndex = function (e) {\n    this.currentBarIndex = this.getOrderIndex(parseInt(e.target.parentElement.style.order, 10), 'splitbar');\n  };\n\n  Splitter.prototype.getSeparatorIndex = function (target) {\n    var array = [].slice.call(this.allBars);\n    array = this.enableReversePanes ? array.reverse() : array;\n    return array.indexOf(target);\n  };\n\n  Splitter.prototype.getPrevBar = function (currentBar) {\n    var prevbar = this.allBars[currentBar - 1];\n    return prevbar;\n  };\n\n  Splitter.prototype.getNextBar = function (currentBar) {\n    var prevbar = this.allBars[currentBar + 1];\n    return prevbar;\n  };\n\n  Splitter.prototype.updateBars = function (index) {\n    this.prevBar = this.getPrevBar(index);\n    this.nextBar = this.getNextBar(index);\n  };\n\n  Splitter.prototype.splitterDetails = function (e) {\n    if (this.orientation === 'Horizontal') {\n      this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n    } else {\n      this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n    }\n\n    this.updateCurrentSeparator(e.target);\n    this.currentIndex(e);\n    this.updateBars(this.currentBarIndex);\n    this.getPaneDetails();\n  };\n\n  Splitter.prototype.triggerResizing = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n      separator: this.currentSeparator\n    };\n    this.trigger('resizing', eventArgs);\n  };\n\n  Splitter.prototype.onMouseDown = function (e) {\n    var _this = this;\n\n    e.preventDefault();\n    var target = e.target;\n\n    if (target.classList.contains(NAVIGATE_ARROW)) {\n      return;\n    }\n\n    this.updateCurrentSeparator(target);\n    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n    this.updateCursorPosition(e, 'previous');\n    this.getPaneDetails();\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n      separator: this.currentSeparator,\n      cancel: false\n    };\n\n    for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n      this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n    }\n\n    this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n      if (!resizeStartArgs.cancel) {\n        _this.wireResizeEvents();\n\n        _this.checkPaneSize(e);\n      }\n    });\n  };\n\n  Splitter.prototype.updatePaneFlexBasis = function (pane) {\n    var previous;\n\n    if (pane.style.flexBasis.indexOf('%') > 0) {\n      previous = this.removePercentageUnit(pane.style.flexBasis);\n    } else {\n      if (pane.style.flexBasis !== '') {\n        previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n      } else {\n        var offset = this.orientation === 'Horizontal' ? pane.offsetWidth : pane.offsetHeight;\n        previous = this.convertPixelToPercentage(offset);\n      }\n    }\n\n    return previous;\n  };\n\n  Splitter.prototype.removePercentageUnit = function (value) {\n    return parseFloat(value.slice(0, value.indexOf('%')));\n  };\n\n  Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n    var percentage = value.toString();\n    var convertedValue;\n\n    if (percentage.indexOf('%') > -1) {\n      convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n      var offsetValue = void 0;\n\n      if (!isNullOrUndefined(targetElement)) {\n        offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n      } else {\n        offsetValue = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n      }\n\n      convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n    } else {\n      convertedValue = parseInt(percentage, 10);\n    }\n\n    return convertedValue;\n  };\n\n  Splitter.prototype.convertPixelToPercentage = function (value) {\n    var offsetValue = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n    return value / offsetValue * 100;\n  };\n\n  Splitter.prototype.convertPixelToNumber = function (value) {\n    if (value.indexOf('p') > -1) {\n      return parseFloat(value.slice(0, value.indexOf('p')));\n    } else {\n      return parseFloat(value);\n    }\n  };\n\n  Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n    var separatorPosition = this.orientation === 'Horizontal' ? this.currentCoordinates.x - rectValue : this.currentCoordinates.y - rectValue;\n    var separator;\n    separator = separatorPosition / offsetValue;\n    separator = separator > 1 ? 1 : separator < 0 ? 0 : separator;\n    return separator * offsetValue;\n  };\n\n  Splitter.prototype.getSeparatorPosition = function (e) {\n    this.updateCursorPosition(e, 'current');\n    var rectBound = this.orientation === 'Horizontal' ? this.element.getBoundingClientRect().left : this.element.getBoundingClientRect().top + window.scrollY;\n    var offSet = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n    return this.calcDragPosition(rectBound, offSet);\n  };\n\n  Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n    var defaultVal = selection === 'min' ? 0 : null; // eslint-disable-next-line\n\n    var paneValue = null;\n\n    if (selection === 'min') {\n      if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n        paneValue = this.paneSettings[paneIndex].min;\n      }\n    } else {\n      if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n        paneValue = this.paneSettings[paneIndex].max;\n      }\n    }\n\n    if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(paneValue)) {\n      if (paneValue.indexOf('%') > 0) {\n        paneValue = this.convertPercentageToPixel(paneValue).toString();\n      }\n\n      return this.convertPixelToNumber(paneValue);\n    } else {\n      return defaultVal;\n    }\n  };\n\n  Splitter.prototype.getPreviousPaneIndex = function () {\n    var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) + 1 : parseInt(this.currentSeparator.style.order, 10) - 1;\n    return this.getOrderIndex(separatorIndex, 'pane');\n  };\n\n  Splitter.prototype.getNextPaneIndex = function () {\n    var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) - 1 : parseInt(this.currentSeparator.style.order, 10) + 1;\n    return this.getOrderIndex(separatorIndex, 'pane');\n  };\n\n  Splitter.prototype.getPaneDetails = function () {\n    var prevPane = null;\n    var nextPane = null;\n    this.order = parseInt(this.currentSeparator.style.order, 10);\n\n    if (this.allPanes.length > 1) {\n      prevPane = this.getPrevPane(this.order);\n      nextPane = this.getNextPane(this.order);\n    }\n\n    if (prevPane && nextPane) {\n      this.previousPane = prevPane;\n      this.nextPane = nextPane;\n      this.prevPaneIndex = this.getPreviousPaneIndex();\n      this.nextPaneIndex = this.getNextPaneIndex();\n    } else {\n      return;\n    }\n  };\n\n  Splitter.prototype.getPaneHeight = function (pane) {\n    return this.orientation === 'Horizontal' ? pane.offsetWidth.toString() : pane.offsetHeight.toString();\n  };\n\n  Splitter.prototype.isValidSize = function (paneIndex) {\n    var isValid = false;\n\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].size) && this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n      isValid = true;\n    }\n\n    return isValid;\n  };\n\n  Splitter.prototype.getPaneDimensions = function () {\n    this.previousPaneHeightWidth = this.previousPane.style.flexBasis === '' ? this.getPaneHeight(this.previousPane) : this.previousPane.style.flexBasis;\n    this.nextPaneHeightWidth = this.nextPane.style.flexBasis === '' ? this.getPaneHeight(this.nextPane) : this.nextPane.style.flexBasis;\n\n    if (this.isValidSize(this.prevPaneIndex)) {\n      this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n      this.updatePrePaneInPercentage = true;\n    }\n\n    if (this.isValidSize(this.nextPaneIndex)) {\n      this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n      this.updateNextPaneInPercentage = true;\n    }\n\n    this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n    this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n  };\n\n  Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n    var coordinatesChanged = true;\n\n    if (pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y) {\n      coordinatesChanged = false;\n    }\n\n    return coordinatesChanged;\n  };\n\n  Splitter.prototype.isCursorMoved = function (e) {\n    var cursorMoved = true;\n\n    if (this.getEventType(e.type) === 'mouse' || !isNullOrUndefined(e.pointerType) && this.getEventType(e.pointerType) === 'mouse') {\n      cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n    } else {\n      cursorMoved = Browser.info.name !== 'msie' ? this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) : this.checkCoordinates(e.pageX, e.pageY);\n    }\n\n    return cursorMoved;\n  };\n\n  Splitter.prototype.getBorder = function () {\n    this.border = 0;\n    var border = this.orientation === 'Horizontal' ? (this.element.offsetWidth - this.element.clientWidth) / 2 : (this.element.offsetHeight - this.element.clientHeight) / 2;\n    this.border = Browser.info.name !== 'chrome' ? this.border : border;\n  };\n\n  Splitter.prototype.onMouseMove = function (e) {\n    if (!this.isCursorMoved(e)) {\n      return;\n    }\n\n    this.getPaneDetails();\n    this.getPaneDimensions();\n    this.triggerResizing(e);\n    var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n    var separatorNewPosition;\n    this.getBorder();\n\n    if (this.orientation === 'Horizontal') {\n      separatorNewPosition = this.element.getBoundingClientRect().left + left - this.currentSeparator.getBoundingClientRect().left + this.border;\n    } else {\n      separatorNewPosition = this.element.getBoundingClientRect().top + left - this.currentSeparator.getBoundingClientRect().top + this.border;\n    }\n\n    this.nextPaneHeightWidth = typeof this.nextPaneHeightWidth === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1 ? this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n    this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n    this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n    this.validateMinMaxValues();\n\n    if (this.nextPaneCurrentWidth < 0) {\n      this.nextPaneCurrentWidth = 0;\n    }\n    /* istanbul ignore next */\n\n\n    if (this.prevPaneCurrentWidth < 0) {\n      this.prevPaneCurrentWidth = 0;\n    }\n\n    if (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth > this.totalWidth) {\n      if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n        this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth - this.totalWidth);\n      } else {\n        this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth - this.totalWidth);\n      }\n    }\n    /* istanbul ignore next */\n\n\n    if (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth < this.totalWidth) {\n      var difference = this.totalWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth);\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n    }\n\n    this.calculateCurrentDimensions();\n    this.addStaticPaneClass();\n    this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n    this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n\n    if (!(this.allPanes.length > 2)) {\n      this.updateSplitterSize();\n    }\n  }; // eslint-disable-next-line\n\n\n  Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n    var paneMinRange = null;\n    var paneMinDimensions;\n    var difference = 0;\n    var validatedVal;\n\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n      paneMinRange = this.paneSettings[paneIndex].min.toString();\n    }\n\n    if (!isNullOrUndefined(paneMinRange)) {\n      if (paneMinRange.indexOf('%') > 0) {\n        paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n      }\n\n      paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n\n      if (paneCurrentWidth < paneMinDimensions) {\n        difference = paneCurrentWidth - paneMinDimensions <= 0 ? 0 : paneCurrentWidth - paneMinDimensions;\n        this.totalWidth = this.totalWidth - difference;\n        this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n        validatedVal = paneMinDimensions;\n      }\n    }\n\n    return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n  }; // eslint-disable-next-line\n\n\n  Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n    var paneMaxRange = null;\n    var paneMaxDimensions;\n    var validatedVal;\n\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n      paneMaxRange = this.paneSettings[paneIndex].max.toString();\n    }\n\n    if (!isNullOrUndefined(paneMaxRange)) {\n      if (paneMaxRange.indexOf('%') > 0) {\n        paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n      }\n\n      paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n\n      if (paneCurrentWidth > paneMaxDimensions) {\n        this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n        this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n        validatedVal = paneMaxDimensions;\n      }\n    }\n\n    return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n  };\n\n  Splitter.prototype.validateMinMaxValues = function () {\n    //validate previous pane minimum range\n    this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane); // Validate next pane minimum range\n\n    this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane); // validate previous pane maximum range\n\n    this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane); // validate next pane maximum range\n\n    this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n  };\n\n  Splitter.prototype.equatePaneWidths = function () {\n    var difference;\n\n    if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth > this.totalPercent) {\n      difference = this.prevPaneCurrentWidth + this.nextPaneCurrentWidth - this.totalPercent;\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - difference / 2 + '%';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - difference / 2 + '%';\n    }\n\n    if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth < this.totalPercent) {\n      difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + difference / 2 + '%';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference / 2 + '%';\n    }\n  };\n\n  Splitter.prototype.calculateCurrentDimensions = function () {\n    if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n      this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth) * 10) / 10));\n      this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth) * 10) / 10));\n\n      if (this.prevPaneCurrentWidth === 0) {\n        this.nextPaneCurrentWidth = this.totalPercent;\n      }\n\n      if (this.nextPaneCurrentWidth === 0) {\n        this.prevPaneCurrentWidth = this.totalPercent;\n      }\n\n      if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n        this.equatePaneWidths();\n      } else {\n        this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n        this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n      }\n\n      this.prevPaneCurrentWidth = this.updatePrePaneInPercentage ? this.prevPaneCurrentWidth : this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n      this.nextPaneCurrentWidth = this.updateNextPaneInPercentage ? this.nextPaneCurrentWidth : this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n      this.updatePrePaneInPercentage = false;\n      this.updateNextPaneInPercentage = false;\n    } else {\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n    }\n  };\n\n  Splitter.prototype.addStaticPaneClass = function () {\n    if (!this.previousPane.classList.contains(STATIC_PANE)) {\n      this.previousPane.classList.add(STATIC_PANE);\n    }\n\n    if (!this.nextPane.classList.contains(STATIC_PANE)) {\n      this.nextPane.classList.add(STATIC_PANE);\n    }\n  };\n\n  Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n    var separatorTopLeft = this.orientation === 'Horizontal' ? this.currentSeparator.offsetLeft : this.currentSeparator.offsetTop;\n    var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n    var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n    var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n    var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n    var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n    var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n    var validatedSize = draggedPos;\n\n    if (draggedPos > nextPaneRange - pane2MinSize) {\n      validatedSize = nextPaneRange - pane2MinSize;\n    } else if (draggedPos < prePaneRange + pane1MinSize) {\n      validatedSize = prePaneRange + pane1MinSize;\n    }\n\n    if (!isNullOrUndefined(pane1MaxSize)) {\n      if (draggedPos > prePaneRange + pane1MaxSize) {\n        validatedSize = prePaneRange + pane1MaxSize;\n      }\n    } else if (!isNullOrUndefined(pane2MaxSize)) {\n      if (draggedPos < nextPaneRange - pane2MaxSize) {\n        validatedSize = nextPaneRange - pane2MaxSize;\n      }\n    }\n\n    return validatedSize;\n  };\n\n  Splitter.prototype.onMouseUp = function (e) {\n    removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n    this.unwireResizeEvents();\n    var eventArgs = {\n      event: e,\n      element: this.element,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator,\n      paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n    };\n\n    for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n      this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n    }\n\n    this.trigger('resizeStop', eventArgs);\n\n    if (this.enablePersistence) {\n      var paneValues = this.paneSettings;\n      paneValues[this.getPreviousPaneIndex()].size = this.allPanes[this.getPreviousPaneIndex()].style.flexBasis;\n      paneValues[this.getNextPaneIndex()].size = this.allPanes[this.getNextPaneIndex()].style.flexBasis;\n      this.setProperties({\n        'paneSettings': paneValues\n      }, true);\n    }\n  };\n\n  Splitter.prototype.panesDimension = function (index, child) {\n    var childCount = child.length;\n    var size;\n    parseInt(this.getHeight(this.element), 10);\n\n    if (!isNullOrUndefined(this.paneSettings[index])) {\n      if (!isNullOrUndefined(this.paneSettings[index].size)) {\n        size = this.paneSettings[index].size;\n\n        if (index < childCount) {\n          setStyleAttribute(child[index], {\n            'flex-basis': size,\n            'order': index * 2\n          });\n\n          if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n            addClass([child[index]], STATIC_PANE);\n          } else if (!this.sizeFlag) {\n            child[index].style.flexBasis = null;\n          }\n\n          if (index === childCount - 1 && this.sizeFlag && this.paneSettings[index].size !== '') {\n            addClass([child[index]], STATIC_PANE);\n          }\n        }\n      } else {\n        this.sizeFlag = true;\n        setStyleAttribute(child[index], {\n          'order': index * 2\n        });\n      }\n    } else {\n      setStyleAttribute(child[index], {\n        'order': index * 2\n      });\n    }\n\n    this.paneOrder.push(index * 2);\n  };\n\n  Splitter.prototype.setTemplate = function (template, toElement) {\n    toElement.innerHTML = '';\n    template = typeof template === 'string' ? this.sanitizeHelper(template) : template;\n    this.templateCompile(toElement, template); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    if (this.isReact) {\n      this.renderReactTemplates();\n    }\n  }; // eslint-disable-next-line\n\n\n  Splitter.prototype.templateCompile = function (ele, cnt) {\n    // eslint-disable-next-line\n    var blazorContain = Object.keys(window);\n    var tempEle = this.createElement('div');\n    this.compileElement(tempEle, cnt, 'content');\n\n    if (tempEle.childNodes.length !== 0) {\n      [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n        ele.appendChild(childEle);\n      });\n    }\n  };\n\n  Splitter.prototype.compileElement = function (ele, val, prop) {\n    // eslint-disable-next-line\n    var blazorContain = Object.keys(window);\n\n    if (typeof val === 'string') {\n      if (val[0] === '.' || val[0] === '#') {\n        var eleVal = document.querySelector(val);\n\n        if (!isNullOrUndefined(eleVal)) {\n          this.templateElement.push(eleVal);\n\n          if (eleVal.style.display === 'none') {\n            eleVal.style.removeProperty('display');\n          }\n\n          if (eleVal.getAttribute('style') === '') {\n            eleVal.removeAttribute('style');\n          }\n\n          ele.appendChild(eleVal);\n          return;\n        } else {\n          val = val.trim();\n        }\n      } else {\n        val = val.trim();\n      }\n    }\n\n    var templateFn;\n\n    if (!isNullOrUndefined(val.outerHTML)) {\n      templateFn = compile(val.outerHTML);\n    } else {\n      templateFn = compile(val);\n    }\n\n    var templateFUN;\n\n    if (!isNullOrUndefined(templateFn)) {\n      templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n    }\n\n    if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n      [].slice.call(templateFUN).forEach(function (el) {\n        ele.appendChild(el);\n      });\n    }\n  };\n\n  Splitter.prototype.paneCollapsible = function (pane, index) {\n    // eslint-disable-next-line\n    this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n  };\n\n  Splitter.prototype.createSplitPane = function (target) {\n    var childCount = target.children.length;\n\n    for (var i = 0; i < this.paneSettings.length; i++) {\n      if (childCount < this.paneSettings.length) {\n        var childElement = this.createElement('div');\n        this.element.appendChild(childElement);\n        childCount = childCount + 1;\n      }\n    }\n\n    childCount = target.children.length;\n    var child = [].slice.call(target.children);\n    this.sizeFlag = false;\n\n    if (childCount > 0) {\n      for (var i = 0; i < childCount; i++) {\n        // To accept only div and span element as pane\n        if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n          this.allPanes.push(child[i]);\n\n          if (this.orientation === 'Horizontal') {\n            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n            this.panesDimension(i, child);\n          } else {\n            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n            this.panesDimension(i, child);\n          }\n\n          if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n            this.setTemplate(this.paneSettings[i].content, child[i]);\n          }\n\n          if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n          }\n\n          if (!isNullOrUndefined(this.paneSettings[i])) {\n            this.paneCollapsible(child[i], i);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * expands corresponding pane based on the index is passed.\n   *\n   * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.expand = function (index) {\n    this.collapsedOnchange(index);\n    this.updatePaneSettings(index, false);\n  };\n  /**\n   * collapses corresponding pane based on the index is passed.\n   *\n   * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.collapse = function (index) {\n    this.isCollapsed(index);\n    this.updatePaneSettings(index, true);\n  };\n  /**\n   * Removes the control from the DOM and also removes all its related events.\n   *\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.destroy = function () {\n    if (!this.isDestroyed) {\n      _super.prototype.destroy.call(this);\n\n      EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n      this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize, true);\n\n      while (this.element.attributes.length > 0) {\n        this.element.removeAttribute(this.element.attributes[0].name);\n      }\n\n      this.element.innerHTML = this.wrapper.innerHTML;\n\n      for (var i = 0; i < this.wrapper.attributes.length; i++) {\n        this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n      }\n\n      if (this.refreshing) {\n        addClass([this.element], ['e-control', 'e-lib', ROOT]);\n        this.allBars = [];\n        this.allPanes = [];\n      }\n\n      this.restoreElem(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      if (this.isReact) {\n        this.clearTemplate();\n      }\n    }\n  };\n\n  Splitter.prototype.restoreElem = function () {\n    if (this.templateElement.length > 0) {\n      for (var i = 0; i < this.templateElement.length; i++) {\n        this.templateElement[i].style.display = 'none';\n        document.body.appendChild(this.templateElement[i]);\n      }\n    }\n  };\n\n  Splitter.prototype.addPaneClass = function (pane) {\n    // eslint-disable-next-line\n    this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) : addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n    return pane;\n  };\n\n  Splitter.prototype.removePaneOrders = function (paneClass) {\n    var childNodes = this.element.childNodes;\n    var panes = [];\n\n    for (var i = 0; childNodes.length < 0; i++) {\n      if (childNodes[i].classList.contains(paneClass)) {\n        panes.push(childNodes[i]);\n      }\n    }\n\n    for (var i = 0; i < panes.length; i++) {\n      panes[i].style.removeProperty('order');\n    }\n  };\n\n  Splitter.prototype.setPaneOrder = function () {\n    for (var i = 0; i < this.allPanes.length; i++) {\n      this.panesDimension(i, this.allPanes);\n    }\n  };\n\n  Splitter.prototype.removeSeparator = function () {\n    for (var i = 0; i < this.allBars.length; i++) {\n      detach(this.allBars[i]);\n    }\n\n    this.allBars = [];\n  };\n\n  Splitter.prototype.updatePanes = function () {\n    this.setPaneOrder();\n    this.removeSeparator();\n    this.addSeparator(this.element);\n  };\n  /**\n   * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n   *\n   * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n   * @param { number } index - Specifies the index where the pane will be inserted.\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.addPane = function (paneProperties, index) {\n    var newPane = this.createElement('div');\n    newPane = this.addPaneClass(newPane);\n    index = index > this.allPanes.length + 1 ? this.allPanes.length : index;\n    var paneDetails = {\n      size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n      min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n      max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n      content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n      resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n      collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n      collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n      cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n    };\n    this.paneSettings.splice(index, 0, paneDetails);\n    this.setProperties({\n      'paneSettings': this.paneSettings\n    }, true);\n\n    if (this.orientation === 'Horizontal') {\n      this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n      this.removePaneOrders(SPLIT_H_PANE);\n    } else {\n      this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n      this.removePaneOrders(SPLIT_V_PANE);\n    }\n\n    this.allPanes.splice(index, 0, newPane);\n    this.updatePanes();\n    this.setTemplate(this.paneSettings[index].content, newPane);\n    this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n    this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n  };\n  /**\n   * Allows you to remove the specified pane dynamically by passing its index value.\n   *\n   * @param { number } index - Specifies the index value to remove the corresponding pane.\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.removePane = function (index) {\n    index = index > this.allPanes.length + 1 ? this.allPanes.length : index;\n    var elementClass = this.orientation === 'Horizontal' ? SPLIT_H_PANE : SPLIT_V_PANE;\n\n    if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n      return;\n    }\n\n    detach(this.element.querySelectorAll('.' + elementClass)[index]);\n    this.allPanes.splice(index, 1);\n    this.removePaneOrders(elementClass);\n    this.updatePanes();\n    this.paneSettings.splice(index, 1);\n    this.setProperties({\n      'paneSettings': this.paneSettings\n    }, true);\n\n    if (this.allPanes.length > 0) {\n      this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    }\n  };\n\n  __decorate([Property('100%')], Splitter.prototype, \"height\", void 0);\n\n  __decorate([Property(false)], Splitter.prototype, \"enableReversePanes\", void 0);\n\n  __decorate([Property('100%')], Splitter.prototype, \"width\", void 0);\n\n  __decorate([Property(false)], Splitter.prototype, \"enablePersistence\", void 0);\n\n  __decorate([Collection([], PaneProperties)], Splitter.prototype, \"paneSettings\", void 0);\n\n  __decorate([Property('Horizontal')], Splitter.prototype, \"orientation\", void 0);\n\n  __decorate([Property('')], Splitter.prototype, \"cssClass\", void 0);\n\n  __decorate([Property(true)], Splitter.prototype, \"enabled\", void 0);\n\n  __decorate([Property(true)], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n\n  __decorate([Property(null)], Splitter.prototype, \"separatorSize\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"created\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"resizeStart\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"resizing\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"resizeStop\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"beforeCollapse\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"beforeExpand\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"collapsed\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"expanded\", void 0);\n\n  Splitter = __decorate([NotifyPropertyChanges], Splitter);\n  return Splitter;\n}(Component);\n\nexport { Splitter };","map":{"version":3,"sources":["/Users/altynbekkuat/Desktop/reactAnalyt/node_modules/@syncfusion/ej2-layouts/src/splitter/splitter.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Property","setStyleAttribute","ChildProperty","compile","NotifyPropertyChanges","addClass","Collection","isNullOrUndefined","Event","EventHandler","selectAll","removeClass","select","Browser","detach","formatUnit","SanitizeHtmlHelper","extend","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","SPLIT_TOUCH","DISABLED","RTL","E_ICONS","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","LAST_BAR","BAR_SIZE_DEFAULT","PaneProperties","_super","apply","Splitter","options","element","call","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","prop","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setReversePane","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","allPanes","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","isCollapsed","collapsedOnchange","newValSize","updatePaneSize","destroyPaneSettings","allBars","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","style","flexBasis","flexPaneIndexes","staticPaneWidth","flexCount","size","innerText","offsetWidth","offsetHeight","flexPaneWidth","border","avgDiffWidth","add","initializeValues","paneOrder","separatorOrder","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","preRender","onReportWindowSize","reportWindowSize","bind","onMouseMoveHandler","onMouseMove","onMouseUpHandler","onMouseUp","onTouchMoveHandler","onTouchEndHandler","wrapper","cloneNode","wrapperParent","parentElement","name","info","css","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","enableReversePanes","document","onDocumentClick","renderComplete","ownerDocument","defaultView","addEventListener","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","previousPane","nextPaneSize","nextPane","splitBarSize","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","getMinInPixel","nextPaneIndex","min","prevPaneIndex","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","preventDefault","triggerResizing","collapsible","collapse","expand","minValue","paneMinRange","convertPixelToNumber","toString","sanitizeHelper","value","enableHtmlSanitizer","item","beforeSanitize","beforeEvent","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","max","content","paneAPI","slice","forEach","el","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","reverse","setAttribute","removeAttribute","push","getBoundingClientRect","className","split","hideResizer","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","updateIsCollapsed","lastBarArrow","targetEle","lastBarIndex","click","_this","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","m","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","paneEle","collectPanes","childNodes","elements","getPrevPane","order","getOrderPane","getNextPane","pane","getOrderIndex","panes","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","body","removeEventListener","staticPaneCount","updateSplitterSize","iswindowResize","getComputedStyle","marginLeft","marginTop","marginBottom","diff","updatePane","flexPane","sizeDiff","isPercent","convertPixelToPercentage","wireResizeEvents","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","removeStaticPanes","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","visiblePane","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","paneValues","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","array","prevbar","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","pointerEvents","resizeStartArgs","previous","removePercentageUnit","offset","parseFloat","targetElement","percentage","convertedValue","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","window","scrollY","offSet","getMinMax","selection","defaultVal","separatorIndex","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","cursorMoved","getBorder","clientWidth","clientHeight","validateDraggedPosition","separatorNewPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","validateMaxRange","paneMaxRange","paneMaxDimensions","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","enablePersistence","panesDimension","child","sizeFlag","template","toElement","templateCompile","isReact","renderReactTemplates","ele","cnt","blazorContain","tempEle","compileElement","childEle","val","eleVal","display","removeProperty","trim","templateFn","outerHTML","templateFUN","id","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","clearTemplate","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     *\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     *\n     * @param  {SplitterModel} newProp - specifies the new property\n     * @param  {SplitterModel} oldProp - specifies the old property\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'enableReversePanes':\n                    this.setReversePane();\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings': {\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content': {\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    }\n                                    case 'resizable': {\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    }\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        // eslint-disable-next-line\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size': {\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                }\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.initializeValues = function () {\n        this.allPanes = [];\n        this.paneOrder = [];\n        this.separatorOrder = [];\n        this.allBars = [];\n        this.previousCoordinates = {};\n        this.currentCoordinates = {};\n        this.updatePrePaneInPercentage = false;\n        this.updateNextPaneInPercentage = false;\n        this.panesDimensions = [];\n        this.border = 0;\n        this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible',\n            'data-resizable', 'data-content', 'data-collapsed'];\n        this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        this.iconsDelay = 300;\n        this.templateElement = [];\n        this.collapseFlag = false;\n        this.expandFlag = true;\n    };\n    Splitter.prototype.preRender = function () {\n        this.initializeValues();\n        this.onReportWindowSize = this.reportWindowSize.bind(this);\n        this.onMouseMoveHandler = this.onMouseMove.bind(this);\n        this.onMouseUpHandler = this.onMouseUp.bind(this);\n        this.onTouchMoveHandler = this.onMouseMove.bind(this);\n        this.onTouchEndHandler = this.onMouseUp.bind(this);\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist(['paneSettings']);\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns {string} - returns the string value\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        if (this.enableReversePanes) {\n            this.setReversePane();\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        var nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) <\n                        this.convertPercentageToPixel((nextFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) <\n                        this.convertPercentageToPixel((previousFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < (nextPaneSize + splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < (prePaneSize - splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                event.preventDefault();\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR) && this.currentSeparator.classList.contains(SPLIT_BAR_ACTIVE)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.getMinInPixel = function (minValue) {\n        var min;\n        if (isNullOrUndefined(minValue)) {\n            return 0;\n        }\n        var paneMinRange = this.convertPixelToNumber(minValue.toString());\n        if (minValue.indexOf('%') > 0) {\n            paneMinRange = this.convertPercentageToPixel(minValue);\n        }\n        min = this.convertPixelToNumber((paneMinRange).toString());\n        return min;\n    };\n    /**\n     * @param {string} value - specifies the string value\n     * @returns {string} returns the string\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // eslint-disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // eslint-disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) {\n            detach(el);\n        });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        // eslint-disable-next-line\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setReversePane = function () {\n        this.allPanes = this.allPanes.reverse();\n        this.allBars = this.allBars.reverse();\n        addClass([this.allBars[this.allBars.length - 1]], LAST_BAR);\n        removeClass([this.allBars[0]], LAST_BAR);\n        this.setProperties({ 'paneSettings': this.paneSettings.reverse() }, true);\n        if (this.enableReversePanes) {\n            this.element.setAttribute('dir', 'rtl');\n        }\n        else {\n            this.element.removeAttribute('dir');\n        }\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            // eslint-disable-next-line\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        var i = index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                // eslint-disable-next-line\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            // eslint-disable-next-line\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        var arrow2 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        var arrow1 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return {\n            collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        // eslint-disable-next-line\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order + 1) : this.getOrderPane(order - 1);\n    };\n    Splitter.prototype.getNextPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order - 1) : this.getOrderPane(order + 1);\n    };\n    Splitter.prototype.getOrderPane = function (order) {\n        var pane;\n        for (var i = 0; i < this.element.children.length; i++) {\n            if (parseInt(this.element.children[i].style.order, 10) === order) {\n                pane = this.element.children[i];\n            }\n        }\n        return pane;\n    };\n    Splitter.prototype.getOrderIndex = function (order, type) {\n        var index;\n        var panes;\n        if (type === 'pane') {\n            panes = this.allPanes;\n        }\n        else {\n            panes = this.allBars;\n        }\n        for (var i = 0; i < panes.length; i++) {\n            if (parseInt(panes[i].style.order, 10) === order) {\n                index = i;\n            }\n        }\n        return index;\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                // eslint-disable-next-line\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    // eslint-disable-next-line\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        // eslint-disable-next-line\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        var proxy = this;\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        if (this.enableReversePanes) {\n            separator.setAttribute('dir', 'ltr');\n        }\n        else {\n            separator.removeAttribute('dir');\n        }\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        // eslint-disable-next-line\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return (target.classList.contains(SPLIT_BAR) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        if (!document.body.contains(this.element)) {\n            document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n            return;\n        }\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        if (paneCount > 0) {\n            setTimeout(function () {\n                _this.updateSplitterSize(true);\n            }, 200);\n        }\n    };\n    Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        for (var j = 0; j < this.allBars.length; j++) {\n            totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n        }\n        var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth -\n            ((this.border * 2) + totalWidth) :\n            this.element.offsetHeight - ((this.border * 2) + totalWidth);\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n        if (this.allPanes.length === 2 && iswindowResize) {\n            var paneCount = this.allPanes.length;\n            var minValue = void 0;\n            var paneMinRange = void 0;\n            var paneIndex = 0;\n            var updatePane = void 0;\n            var flexPane = void 0;\n            for (var i = 0; i < paneCount; i++) {\n                if (!isNullOrUndefined(this.paneSettings[i].min)) {\n                    paneMinRange = this.convertPixelToNumber((this.paneSettings[i].min).toString());\n                    if (this.paneSettings[i].min.indexOf('%') > 0) {\n                        paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n                    }\n                    minValue = this.convertPixelToNumber((paneMinRange).toString());\n                    if (this.allPanes[i].offsetWidth < minValue) {\n                        if (i === paneIndex) {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i + 1];\n                        }\n                        else {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i - 1];\n                        }\n                        var sizeDiff = minValue - this.allPanes[i].offsetWidth;\n                        var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n                        updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePane.offsetWidth + sizeDiff) + '%'\n                            : (updatePane.offsetWidth + sizeDiff) + 'px';\n                        flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ?\n                            this.convertPixelToPercentage(flexPane.offsetWidth - sizeDiff) + '%' : (flexPane.offsetWidth - sizeDiff) + 'px';\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        document.addEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.addEventListener('mouseup', this.onMouseUpHandler, true);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.addEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.addEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.removeEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.removeEventListener('mouseup', this.onMouseUpHandler, true);\n        document.removeEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.removeEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n        var totalWidth = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        if (totalWidth > this.element.offsetWidth) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var collapseCount = 0;\n        for (var j = 0; j < this.element.children.length; j++) {\n            if (this.element.children[j].classList.contains(COLLAPSE_PANE)) {\n                collapseCount = collapseCount + 1;\n            }\n        }\n        var visiblePane = collapseCount === this.allPanes.length - 2;\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n            if (visiblePane && !this.allPanes[i].classList.contains(COLLAPSE_PANE) && this.paneSettings[i].size &&\n                i !== this.allPanes.length - 1) {\n                panes[i].style.flexGrow = '';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) &&\n                this.paneSettings[this.currentBarIndex + 1].resizable) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.removeStaticPanes = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        var paneValues = this.paneSettings;\n        paneValues[index].collapsed = collapsed;\n        this.setProperties({ 'paneSettings': paneValues }, true);\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n                    this.resizableModel(this.currentBarIndex - 1, true);\n                }\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getOrderIndex(parseInt(e.target.parentElement.style.order, 10), 'splitbar');\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        array = this.enableReversePanes ? array.reverse() : array;\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        var separator;\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top + window.scrollY;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // eslint-disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) + 1 :\n            parseInt(this.currentSeparator.style.order, 10) - 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) - 1 :\n            parseInt(this.currentSeparator.style.order, 10) + 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.order);\n            nextPane = this.getNextPane(this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        if (!(this.allPanes.length > 2)) {\n            this.updateSplitterSize();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n        if (this.enablePersistence) {\n            var paneValues = this.paneSettings;\n            paneValues[this.getPreviousPaneIndex()].size = this.allPanes[this.getPreviousPaneIndex()].style.flexBasis;\n            paneValues[this.getNextPaneIndex()].size = this.allPanes[this.getNextPaneIndex()].style.flexBasis;\n            this.setProperties({ 'paneSettings': paneValues }, true);\n        }\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        // eslint-disable-next-line\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * expands corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     *\n     * @returns {void}\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize, true);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.isReact) {\n                this.clearTemplate();\n            }\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var childNodes = this.element.childNodes;\n        var panes = [];\n        for (var i = 0; childNodes.length < 0; i++) {\n            if (childNodes[i].classList.contains(paneClass)) {\n                panes.push(childNodes[i]);\n            }\n        }\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     *\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns {void}\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     *\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns {void}\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableReversePanes\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n"]},"metadata":{},"sourceType":"module"}