{"ast":null,"code":"import { append, createElement, EventHandler, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { Popup } from '@syncfusion/ej2-popups';\nimport * as events from './constant';\nimport * as cls from './css-constant';\n/**\n * Kanban mobile layout rendering module\n *\n */\n\nvar MobileLayout =\n/** @class */\nfunction () {\n  function MobileLayout(parent) {\n    this.parent = parent;\n  }\n\n  MobileLayout.prototype.renderSwimlaneHeader = function () {\n    var toolbarWrapper = createElement('div', {\n      className: cls.SWIMLANE_HEADER_CLASS,\n      innerHTML: '<div class=\"' + cls.SWIMLANE_HEADER_TOOLBAR_CLASS + '\"><div class=\"' + cls.TOOLBAR_MENU_CLASS + '\"><div class=\"e-icons ' + cls.TOOLBAR_MENU_ICON_CLASS + '\"></div></div><div class=\"' + cls.TOOLBAR_LEVEL_TITLE_CLASS + '\"><div class=\"' + cls.TOOLBAR_SWIMLANE_NAME_CLASS + '\"></div></div></div>'\n    });\n    this.parent.element.appendChild(toolbarWrapper);\n    EventHandler.add(toolbarWrapper.querySelector('.' + cls.TOOLBAR_MENU_ICON_CLASS), 'click', this.menuClick, this);\n  };\n\n  MobileLayout.prototype.renderSwimlaneTree = function () {\n    var height = this.parent.element.querySelector('.' + cls.SWIMLANE_HEADER_CLASS).offsetHeight;\n    var treeHeight = window.innerHeight - height;\n    this.popupOverlay = createElement('div', {\n      className: cls.SWIMLANE_OVERLAY_CLASS,\n      styles: 'height: ' + treeHeight + 'px;'\n    });\n    var wrapper = createElement('div', {\n      className: cls.SWIMLANE_CONTENT_CLASS,\n      styles: 'top:' + height + 'px;'\n    });\n    var treeWrapper = createElement('div', {\n      className: cls.SWIMLANE_RESOURCE_CLASS + ' e-popup-close',\n      styles: 'height: ' + treeHeight + 'px;'\n    });\n    wrapper.appendChild(treeWrapper);\n    wrapper.appendChild(this.popupOverlay);\n    this.parent.element.appendChild(wrapper);\n    var swimlaneTree = createElement('div', {\n      className: cls.SWIMLANE_TREE_CLASS\n    });\n    treeWrapper.appendChild(swimlaneTree);\n    this.treeViewObj = new TreeView({\n      cssClass: this.parent.cssClass,\n      enableRtl: this.parent.enableRtl,\n      fields: {\n        dataSource: this.parent.layoutModule.kanbanRows,\n        id: 'keyField',\n        text: 'textField'\n      },\n      nodeTemplate: this.parent.swimlaneSettings.template,\n      nodeClicked: this.treeSwimlaneClick.bind(this),\n      drawNode: this.drawNode.bind(this)\n    });\n    this.treeViewObj.appendTo(swimlaneTree);\n    var popupObj = {\n      targetType: 'relative',\n      actionOnScroll: 'none',\n      enableRtl: this.parent.enableRtl,\n      zIndex: 10,\n      hideAnimation: {\n        name: 'SlideLeftOut',\n        duration: 500\n      },\n      showAnimation: {\n        name: 'SlideLeftIn',\n        duration: 500\n      },\n      viewPortElement: this.parent.element.querySelector('.' + cls.CONTENT_CLASS)\n    };\n    popupObj.content = this.treeViewObj.element;\n    this.treePopup = new Popup(treeWrapper, popupObj);\n  };\n\n  MobileLayout.prototype.menuClick = function () {\n    if (this.parent.element.querySelector('.' + cls.SWIMLANE_RESOURCE_CLASS).classList.contains('e-popup-open')) {\n      this.treePopup.hide();\n      removeClass([this.popupOverlay], 'e-enable');\n    } else {\n      var treeNodes = [].slice.call(this.treeViewObj.element.querySelectorAll('.e-list-item'));\n      removeClass(treeNodes, 'e-active');\n      addClass([treeNodes[this.parent.layoutModule.swimlaneIndex]], 'e-active');\n      this.treePopup.show();\n      addClass([this.popupOverlay], 'e-enable');\n    }\n  };\n\n  MobileLayout.prototype.treeSwimlaneClick = function (args) {\n    this.treePopup.hide();\n    var treeNodes = [].slice.call(this.treeViewObj.element.querySelectorAll('.e-list-item'));\n    this.parent.layoutModule.swimlaneIndex = treeNodes.indexOf(args.node);\n    this.parent.layoutModule.scrollLeft = 0;\n    this.parent.notify(events.dataReady, {\n      processedData: this.parent.kanbanData\n    });\n    args.event.preventDefault();\n  };\n\n  MobileLayout.prototype.hidePopup = function () {\n    this.treePopup.hide();\n    removeClass([this.popupOverlay], 'e-enable');\n  };\n\n  MobileLayout.prototype.getWidth = function () {\n    return window.innerWidth * 80 / 100;\n  };\n\n  MobileLayout.prototype.drawNode = function (args) {\n    if (this.parent.swimlaneSettings.template && this.parent.isReact) {\n      var templateId = this.parent.element.id + '_treeviewTemplate';\n      var treeViewTemplate = this.parent.templateParser(this.parent.swimlaneSettings.template)(args.nodeData, this.parent, 'nodeTemplate', templateId, false);\n      append(treeViewTemplate, args.node.querySelector('.e-list-text'));\n    }\n  };\n\n  return MobileLayout;\n}();\n\nexport { MobileLayout };","map":{"version":3,"sources":["/Users/altynbekkuat/Desktop/NomaLytics/node_modules/@syncfusion/ej2-kanban/src/kanban/base/mobile-layout.js"],"names":["append","createElement","EventHandler","addClass","removeClass","TreeView","Popup","events","cls","MobileLayout","parent","prototype","renderSwimlaneHeader","toolbarWrapper","className","SWIMLANE_HEADER_CLASS","innerHTML","SWIMLANE_HEADER_TOOLBAR_CLASS","TOOLBAR_MENU_CLASS","TOOLBAR_MENU_ICON_CLASS","TOOLBAR_LEVEL_TITLE_CLASS","TOOLBAR_SWIMLANE_NAME_CLASS","element","appendChild","add","querySelector","menuClick","renderSwimlaneTree","height","offsetHeight","treeHeight","window","innerHeight","popupOverlay","SWIMLANE_OVERLAY_CLASS","styles","wrapper","SWIMLANE_CONTENT_CLASS","treeWrapper","SWIMLANE_RESOURCE_CLASS","swimlaneTree","SWIMLANE_TREE_CLASS","treeViewObj","cssClass","enableRtl","fields","dataSource","layoutModule","kanbanRows","id","text","nodeTemplate","swimlaneSettings","template","nodeClicked","treeSwimlaneClick","bind","drawNode","appendTo","popupObj","targetType","actionOnScroll","zIndex","hideAnimation","name","duration","showAnimation","viewPortElement","CONTENT_CLASS","content","treePopup","classList","contains","hide","treeNodes","slice","call","querySelectorAll","swimlaneIndex","show","args","indexOf","node","scrollLeft","notify","dataReady","processedData","kanbanData","event","preventDefault","hidePopup","getWidth","innerWidth","isReact","templateId","treeViewTemplate","templateParser","nodeData"],"mappings":"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","sourcesContent":["import { append, createElement, EventHandler, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { Popup } from '@syncfusion/ej2-popups';\nimport * as events from './constant';\nimport * as cls from './css-constant';\n/**\n * Kanban mobile layout rendering module\n *\n */\nvar MobileLayout = /** @class */ (function () {\n    function MobileLayout(parent) {\n        this.parent = parent;\n    }\n    MobileLayout.prototype.renderSwimlaneHeader = function () {\n        var toolbarWrapper = createElement('div', {\n            className: cls.SWIMLANE_HEADER_CLASS,\n            innerHTML: '<div class=\"' + cls.SWIMLANE_HEADER_TOOLBAR_CLASS + '\"><div class=\"' + cls.TOOLBAR_MENU_CLASS +\n                '\"><div class=\"e-icons ' + cls.TOOLBAR_MENU_ICON_CLASS + '\"></div></div><div class=\"' + cls.TOOLBAR_LEVEL_TITLE_CLASS +\n                '\"><div class=\"' + cls.TOOLBAR_SWIMLANE_NAME_CLASS + '\"></div></div></div>'\n        });\n        this.parent.element.appendChild(toolbarWrapper);\n        EventHandler.add(toolbarWrapper.querySelector('.' + cls.TOOLBAR_MENU_ICON_CLASS), 'click', this.menuClick, this);\n    };\n    MobileLayout.prototype.renderSwimlaneTree = function () {\n        var height = this.parent.element.querySelector('.' + cls.SWIMLANE_HEADER_CLASS).offsetHeight;\n        var treeHeight = window.innerHeight - height;\n        this.popupOverlay = createElement('div', { className: cls.SWIMLANE_OVERLAY_CLASS, styles: 'height: ' + treeHeight + 'px;' });\n        var wrapper = createElement('div', { className: cls.SWIMLANE_CONTENT_CLASS, styles: 'top:' + height + 'px;' });\n        var treeWrapper = createElement('div', {\n            className: cls.SWIMLANE_RESOURCE_CLASS + ' e-popup-close', styles: 'height: ' + treeHeight + 'px;'\n        });\n        wrapper.appendChild(treeWrapper);\n        wrapper.appendChild(this.popupOverlay);\n        this.parent.element.appendChild(wrapper);\n        var swimlaneTree = createElement('div', { className: cls.SWIMLANE_TREE_CLASS });\n        treeWrapper.appendChild(swimlaneTree);\n        this.treeViewObj = new TreeView({\n            cssClass: this.parent.cssClass,\n            enableRtl: this.parent.enableRtl,\n            fields: {\n                dataSource: this.parent.layoutModule.kanbanRows,\n                id: 'keyField',\n                text: 'textField'\n            },\n            nodeTemplate: this.parent.swimlaneSettings.template,\n            nodeClicked: this.treeSwimlaneClick.bind(this),\n            drawNode: this.drawNode.bind(this),\n        });\n        this.treeViewObj.appendTo(swimlaneTree);\n        var popupObj = {\n            targetType: 'relative',\n            actionOnScroll: 'none',\n            enableRtl: this.parent.enableRtl,\n            zIndex: 10,\n            hideAnimation: { name: 'SlideLeftOut', duration: 500 },\n            showAnimation: { name: 'SlideLeftIn', duration: 500 },\n            viewPortElement: this.parent.element.querySelector('.' + cls.CONTENT_CLASS)\n        };\n        popupObj.content = this.treeViewObj.element;\n        this.treePopup = new Popup(treeWrapper, popupObj);\n    };\n    MobileLayout.prototype.menuClick = function () {\n        if (this.parent.element.querySelector('.' + cls.SWIMLANE_RESOURCE_CLASS).classList.contains('e-popup-open')) {\n            this.treePopup.hide();\n            removeClass([this.popupOverlay], 'e-enable');\n        }\n        else {\n            var treeNodes = [].slice.call(this.treeViewObj.element.querySelectorAll('.e-list-item'));\n            removeClass(treeNodes, 'e-active');\n            addClass([treeNodes[this.parent.layoutModule.swimlaneIndex]], 'e-active');\n            this.treePopup.show();\n            addClass([this.popupOverlay], 'e-enable');\n        }\n    };\n    MobileLayout.prototype.treeSwimlaneClick = function (args) {\n        this.treePopup.hide();\n        var treeNodes = [].slice.call(this.treeViewObj.element.querySelectorAll('.e-list-item'));\n        this.parent.layoutModule.swimlaneIndex = treeNodes.indexOf(args.node);\n        this.parent.layoutModule.scrollLeft = 0;\n        this.parent.notify(events.dataReady, { processedData: this.parent.kanbanData });\n        args.event.preventDefault();\n    };\n    MobileLayout.prototype.hidePopup = function () {\n        this.treePopup.hide();\n        removeClass([this.popupOverlay], 'e-enable');\n    };\n    MobileLayout.prototype.getWidth = function () {\n        return (window.innerWidth * 80) / 100;\n    };\n    MobileLayout.prototype.drawNode = function (args) {\n        if (this.parent.swimlaneSettings.template && this.parent.isReact) {\n            var templateId = this.parent.element.id + '_treeviewTemplate';\n            var treeViewTemplate = this.parent.templateParser(this.parent.swimlaneSettings.template)(args.nodeData, this.parent, 'nodeTemplate', templateId, false);\n            append(treeViewTemplate, args.node.querySelector('.e-list-text'));\n        }\n    };\n    return MobileLayout;\n}());\nexport { MobileLayout };\n"]},"metadata":{},"sourceType":"module"}