{"ast":null,"code":"var _jsxFileName = \"/Users/altynbekkuat/Desktop/reactAnalyt/src/contexts/ContextProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StateContext = /*#__PURE__*/createContext();\nconst initialState = {\n  chat: false,\n  cart: false,\n  userProfile: false,\n  notification: false\n};\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [screenSize, setScreenSize] = useState(undefined);\n  const [currentColor, setCurrentColor] = useState('#03C9D7');\n  const [currentMode, setCurrentMode] = useState('Light');\n  const [themeSettings, setThemeSettings] = useState(false);\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [isClicked, setIsClicked] = useState(initialState);\n\n  const setMode = e => {\n    setCurrentMode(e.target.value);\n    localStorage.setItem('themeMode', e.target.value);\n  };\n\n  const setColor = color => {\n    setCurrentColor(color);\n    localStorage.setItem('colorMode', color);\n  };\n\n  const handleClick = clicked => setIsClicked({ ...initialState,\n    [clicked]: true\n  });\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line react/jsx-no-constructed-context-values\n    _jsxDEV(StateContext.Provider, {\n      value: {\n        currentColor,\n        currentMode,\n        activeMenu,\n        screenSize,\n        setScreenSize,\n        handleClick,\n        isClicked,\n        initialState,\n        setIsClicked,\n        setActiveMenu,\n        setCurrentColor,\n        setCurrentMode,\n        setMode,\n        setColor,\n        themeSettings,\n        setThemeSettings\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(ContextProvider, \"YBYWAJXswshG7JQ6u8BT2/5qSXI=\");\n\n_c = ContextProvider;\nexport const useStateContext = () => {\n  _s2();\n\n  return useContext(StateContext);\n};\n\n_s2(useStateContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/Users/altynbekkuat/Desktop/reactAnalyt/src/contexts/ContextProvider.js"],"names":["React","createContext","useContext","useState","StateContext","initialState","chat","cart","userProfile","notification","ContextProvider","children","screenSize","setScreenSize","undefined","currentColor","setCurrentColor","currentMode","setCurrentMode","themeSettings","setThemeSettings","activeMenu","setActiveMenu","isClicked","setIsClicked","setMode","e","target","value","localStorage","setItem","setColor","color","handleClick","clicked","useStateContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;;AAEA,MAAMC,YAAY,gBAAGH,aAAa,EAAlC;AAEA,MAAMI,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,KADa;AAEnBC,EAAAA,IAAI,EAAE,KAFa;AAGnBC,EAAAA,WAAW,EAAE,KAHM;AAInBC,EAAAA,YAAY,EAAE;AAJK,CAArB;AAOA,OAAO,MAAMC,eAAe,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC/C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAACW,SAAD,CAA5C;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,SAAD,CAAhD;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,OAAD,CAA9C;AACA,QAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAACE,YAAD,CAA1C;;AAEA,QAAMoB,OAAO,GAAIC,CAAD,IAAO;AACrBR,IAAAA,cAAc,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCJ,CAAC,CAACC,MAAF,CAASC,KAA3C;AACD,GAHD;;AAKA,QAAMG,QAAQ,GAAIC,KAAD,IAAW;AAC1BhB,IAAAA,eAAe,CAACgB,KAAD,CAAf;AACAH,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCE,KAAlC;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAIC,OAAD,IAAaV,YAAY,CAAC,EAAE,GAAGnB,YAAL;AAAmB,KAAC6B,OAAD,GAAW;AAA9B,GAAD,CAA7C;;AAEA;AAAA;AACE;AACA,YAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE;AAAEnB,QAAAA,YAAF;AAAgBE,QAAAA,WAAhB;AAA6BI,QAAAA,UAA7B;AAAyCT,QAAAA,UAAzC;AAAqDC,QAAAA,aAArD;AAAoEoB,QAAAA,WAApE;AAAiFV,QAAAA,SAAjF;AAA4FlB,QAAAA,YAA5F;AAA0GmB,QAAAA,YAA1G;AAAwHF,QAAAA,aAAxH;AAAuIN,QAAAA,eAAvI;AAAwJE,QAAAA,cAAxJ;AAAwKO,QAAAA,OAAxK;AAAiLM,QAAAA,QAAjL;AAA2LZ,QAAAA,aAA3L;AAA0MC,QAAAA;AAA1M,OAA9B;AAAA,gBACGT;AADH;AAAA;AAAA;AAAA;AAAA;AAFF;AAMD,CA1BM;;GAAMD,e;;KAAAA,e;AA4Bb,OAAO,MAAMyB,eAAe,GAAG;AAAA;;AAAA,SAAMjC,UAAU,CAACE,YAAD,CAAhB;AAAA,CAAxB;;IAAM+B,e","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst StateContext = createContext();\n\nconst initialState = {\n  chat: false,\n  cart: false,\n  userProfile: false,\n  notification: false,\n};\n\nexport const ContextProvider = ({ children }) => {\n  const [screenSize, setScreenSize] = useState(undefined);\n  const [currentColor, setCurrentColor] = useState('#03C9D7');\n  const [currentMode, setCurrentMode] = useState('Light');\n  const [themeSettings, setThemeSettings] = useState(false);\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [isClicked, setIsClicked] = useState(initialState);\n\n  const setMode = (e) => {\n    setCurrentMode(e.target.value);\n    localStorage.setItem('themeMode', e.target.value);\n  };\n\n  const setColor = (color) => {\n    setCurrentColor(color);\n    localStorage.setItem('colorMode', color);\n  };\n\n  const handleClick = (clicked) => setIsClicked({ ...initialState, [clicked]: true });\n\n  return (\n    // eslint-disable-next-line react/jsx-no-constructed-context-values\n    <StateContext.Provider value={{ currentColor, currentMode, activeMenu, screenSize, setScreenSize, handleClick, isClicked, initialState, setIsClicked, setActiveMenu, setCurrentColor, setCurrentMode, setMode, setColor, themeSettings, setThemeSettings }}>\n      {children}\n    </StateContext.Provider>\n  );\n};\n\nexport const useStateContext = () => useContext(StateContext);\n"]},"metadata":{},"sourceType":"module"}